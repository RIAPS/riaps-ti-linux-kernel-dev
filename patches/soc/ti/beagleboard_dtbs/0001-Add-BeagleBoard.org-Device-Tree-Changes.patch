From 95c2478c073fa6d70d697d29782c272dc50e790c Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Fri, 27 May 2022 12:40:52 -0500
Subject: [PATCH] Add BeagleBoard.org Device Tree Changes

https://github.com/beagleboard/BeagleBoard-DeviceTrees/tree/v5.10.x-ti-arm64

https://github.com/beagleboard/BeagleBoard-DeviceTrees/commit/246d6d2d97b676b02995f8e17d8e794e13e5c078
Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 arch/arm64/boot/dts/ti/Makefile               |    1 +
 .../boot/dts/ti/k3-j721e-beagleboneai64.dts   | 2279 +++++++++++++++++
 .../dts/ti/k3-j721e-common-proc-board.dts     |   56 +-
 .../boot/dts/ti/k3-j721e-edgeai-apps.dts      |    2 +-
 arch/arm64/boot/dts/ti/k3-j721e-main.dtsi     |   65 +-
 .../dts/ti/k3-j721e-rtos-memory-map-old.dtsi  |  285 +++
 .../boot/dts/ti/k3-j721e-rtos-memory-map.dtsi |   34 +-
 arch/arm64/boot/dts/ti/k3-j721e-sk.dts        |   24 -
 .../boot/dts/ti/k3-j721e-vision-apps.dts      |    2 +-
 arch/arm64/boot/dts/ti/overlays/Makefile      |   11 +
 ...3-j721e-beagleboneai64-RPi-7inch-panel.dts |  145 ++
 .../boot/dts/ti/overlays/robotics-cape.dts    |  264 ++
 include/dt-bindings/board/am572x-bone-pins.h  |  179 ++
 .../dt-bindings/board/k3-j721e-bone-pins.h    |  229 ++
 include/dt-bindings/pinctrl/k3.h              |  269 ++
 15 files changed, 3759 insertions(+), 86 deletions(-)
 create mode 100644 arch/arm64/boot/dts/ti/k3-j721e-beagleboneai64.dts
 create mode 100644 arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map-old.dtsi
 create mode 100644 arch/arm64/boot/dts/ti/overlays/Makefile
 create mode 100644 arch/arm64/boot/dts/ti/overlays/k3-j721e-beagleboneai64-RPi-7inch-panel.dts
 create mode 100644 arch/arm64/boot/dts/ti/overlays/robotics-cape.dts
 create mode 100644 include/dt-bindings/board/am572x-bone-pins.h
 create mode 100644 include/dt-bindings/board/k3-j721e-bone-pins.h

diff --git a/arch/arm64/boot/dts/ti/Makefile b/arch/arm64/boot/dts/ti/Makefile
index 8a66994e24e2..73b84c5b4932 100644
--- a/arch/arm64/boot/dts/ti/Makefile
+++ b/arch/arm64/boot/dts/ti/Makefile
@@ -47,3 +47,4 @@ dtb-$(CONFIG_ARCH_K3) += k3-am625-sk.dtb
 dtb-$(CONFIG_ARCH_K3) += k3-am625-skeleton.dtb
 dtb-$(CONFIG_ARCH_K3) += k3-am625-sk-lpmdemo.dtb
 dtb-$(CONFIG_ARCH_K3) += k3-am625-sk-csi2-ov5640.dtbo
+dtb-$(CONFIG_ARCH_K3) += k3-j721e-beagleboneai64.dtb
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-beagleboneai64.dts b/arch/arm64/boot/dts/ti/k3-j721e-beagleboneai64.dts
new file mode 100644
index 000000000000..e4fb2a7ec20a
--- /dev/null
+++ b/arch/arm64/boot/dts/ti/k3-j721e-beagleboneai64.dts
@@ -0,0 +1,2279 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2022 Texas Instruments Incorporated - https://www.ti.com/
+ * Copyright (C) 2022 Jason Kridner, BeagleBoard.org Foundation
+ */
+
+/dts-v1/;
+
+#include "k3-j721e-som-p0.dtsi"
+#include "k3-j721e-rtos-memory-map.dtsi"
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/net/ti-dp83867.h>
+#include <dt-bindings/board/k3-j721e-bone-pins.h>
+
+/ {
+
+	model = "BeagleBoard.org BeagleBone AI-64";
+	compatible = "beagle,j721e-beagleboneai64", "ti,j721e";
+
+	chosen {
+		stdout-path = "serial2:115200n8";
+		bootargs = "console=ttyS2,115200n8 earlycon=ns16550a,mmio32,0x02800000";
+		base_dtb = "k3-j721e-beagleboneai64.dts";
+		base_dtb_timestamp = __TIMESTAMP__;
+	};
+
+	gpio_keys: gpio-keys {
+		compatible = "gpio-keys";
+		autorepeat;
+		pinctrl-names = "default";
+		pinctrl-0 = <&sw_pwr_pins_default>;
+
+		sw_boot: sw1 {
+			status = "disabled";
+			label = "BOOT";
+			linux,code = <BTN_0>;
+			gpios = <&wkup_gpio0 0 GPIO_ACTIVE_LOW>;
+		};
+
+		sw_pwr: sw2 {
+			label = "POWER";
+			linux,code = <KEY_POWER>;
+			gpios = <&wkup_gpio0 4 GPIO_ACTIVE_LOW>;
+		};
+	};
+
+	gpio_leds: gpio-leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <&led_pins_default>;
+
+		usr_led0: usr_led0 {
+			label = "beaglebone:green:usr0";
+			default-state = "keep";
+			linux,default-trigger = "heartbeat";
+			gpios = <&main_gpio0 96 GPIO_ACTIVE_HIGH>;
+		};
+
+		usr_led1: usr_led1 {
+			label = "beaglebone:green:usr1";
+			default-state = "keep";
+			linux,default-trigger = "mmc0";
+			gpios = <&main_gpio0 95 GPIO_ACTIVE_HIGH>;
+		};
+
+		usr_led2: usr_led2 {
+			label = "beaglebone:green:usr2";
+			linux,default-trigger = "cpu";
+			gpios = <&main_gpio0 97 GPIO_ACTIVE_HIGH>;
+		};
+
+		usr_led3: usr_led3 {
+			label = "beaglebone:green:usr3";
+			linux,default-trigger = "mmc1";
+			gpios = <&main_gpio0 110 GPIO_ACTIVE_HIGH>;
+		};
+
+		usr_led4: usr_led4 {
+			label = "beaglebone:green:usr4";
+			linux,default-trigger = "netdev";
+			gpios = <&main_gpio0 109 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_03: led_P8_03 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_03 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_04: led_P8_04 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_04 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_05: led_P8_05 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_05 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_06: led_P8_06 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_06 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_07: led_P8_07 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_07 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_08: led_P8_08 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_08 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_09: led_P8_09 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_09 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_10: led_P8_10 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_10 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_11: led_P8_11 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_11 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_12: led_P8_12 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_12 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_13: led_P8_13 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_13 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_14: led_P8_14 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_14 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_15: led_P8_15 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_15 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_16: led_P8_16 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_16 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_17: led_P8_17 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_17 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_18: led_P8_18 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_18 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_19: led_P8_19 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_19 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_20: led_P8_20 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_20 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_21: led_P8_21 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_21 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_22: led_P8_22 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_22 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_23: led_P8_23 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_23 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_24: led_P8_24 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_24 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_25: led_P8_25 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_25 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_26: led_P8_26 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_26 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_27: led_P8_27 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_27 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_28: led_P8_28 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_28 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_29: led_P8_29 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_29 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_30: led_P8_30 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_30 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_31: led_P8_31 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_31 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_32: led_P8_32 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_32 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_33: led_P8_33 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_33 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_34: led_P8_34 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_34 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_35: led_P8_35 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_35 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_36: led_P8_36 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_36 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_37: led_P8_37 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_37 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_38: led_P8_38 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_38 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_39: led_P8_39 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_39 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_40: led_P8_40 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_40 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_41: led_P8_41 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_41 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_42: led_P8_42 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_42 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_43: led_P8_43 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_43 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_44: led_P8_44 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_44 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_45: led_P8_45 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_45 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P8_46: led_P8_46 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_46 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_11: led_P9_11 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_11 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_12: led_P9_12 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_12 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_13: led_P9_13 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_13 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_14: led_P9_14 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_14 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_15: led_P9_15 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_15 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_16: led_P9_16 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_16 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_17: led_P9_17 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_17 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_18: led_P9_18 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_18 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_19: led_P9_19 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_19 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_20: led_P9_20 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_20 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_21: led_P9_21 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_21 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_22: led_P9_22 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_22 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_23: led_P9_23 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_23 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_24: led_P9_24 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_24 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_25: led_P9_25 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_25 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_26: led_P9_26 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_26 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_27: led_P9_27 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_27 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_28: led_P9_28 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_28 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_29: led_P9_29 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_29 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_30: led_P9_30 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_30 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_31: led_P9_31 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_31 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_33: led_P9_33 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_33 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_35: led_P9_35 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_35 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_36: led_P9_36 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_36 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_37: led_P9_37 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_37 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_38: led_P9_38 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_38 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_39: led_P9_39 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_39 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_40: led_P9_40 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_40 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_41: led_P9_41 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P9_41 GPIO_ACTIVE_HIGH>;
+		};
+
+		bone_led_P9_42: led_P9_42 {
+			status = "disabled";
+			linux,default-trigger = "default-off";
+			gpios = <gpio_P8_42 GPIO_ACTIVE_HIGH>;
+		};
+	};
+
+	/* Dummy driver to request setup for cape header pins */
+	cape_header: pinmux_dummy {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <
+			&P8_03_default_pin
+			&P8_04_default_pin
+			&P8_05_default_pin
+			&P8_06_default_pin
+			&P8_07_default_pin
+			&P8_08_default_pin
+			&P8_09_default_pin
+			&P8_10_default_pin
+			&P8_11_default_pin
+			&P8_12_default_pin
+			&P8_13_default_pin
+			&P8_14_default_pin
+			&P8_15_default_pin
+			&P8_16_default_pin
+			&P8_17_default_pin
+			&P8_18_default_pin
+			&P8_19_default_pin
+			&P8_20_default_pin
+			&P8_21_default_pin
+			&P8_22_default_pin
+			&P8_23_default_pin
+			&P8_24_default_pin
+			&P8_25_default_pin
+			&P8_26_default_pin
+			&P8_27_default_pin
+			&P8_28_default_pin
+			&P8_29_default_pin
+			&P8_30_default_pin
+			&P8_31_default_pin
+			&P8_32_default_pin
+			&P8_33_default_pin
+			&P8_34_default_pin
+			&P8_35_default_pin
+			&P8_36_default_pin
+			&P8_37_default_pin
+			&P8_38_default_pin
+			&P8_39_default_pin
+			&P8_40_default_pin
+			&P8_41_default_pin
+			&P8_42_default_pin
+			&P8_43_default_pin
+			&P8_44_default_pin
+			&P8_45_default_pin
+			&P8_46_default_pin
+			&P9_11_default_pin
+			&P9_12_default_pin
+			&P9_13_default_pin
+			&P9_14_default_pin
+			&P9_15_default_pin
+			&P9_16_default_pin
+			&P9_17_default_pin
+			&P9_18_default_pin
+			&P9_19_default_pin
+			&P9_20_default_pin
+			&P9_21_default_pin
+			&P9_22_default_pin
+			&P9_23_default_pin
+			&P9_24_default_pin
+			&P9_25_default_pin
+			&P9_26_default_pin
+			&P9_27_default_pin
+			&P9_28_default_pin
+			&P9_29_default_pin
+			&P9_30_default_pin
+			&P9_31_default_pin
+			&P9_33_default_pin
+			&P9_35_default_pin
+			&P9_36_default_pin
+			&P9_37_default_pin
+			&P9_38_default_pin
+			&P9_39_default_pin
+			&P9_40_default_pin
+			&P9_41_default_pin
+			&P9_42_default_pin
+		>;
+	};
+
+	evm_12v0: fixedregulator-evm12v0 {
+		/* main supply */
+		compatible = "regulator-fixed";
+		regulator-name = "evm_12v0";
+		regulator-min-microvolt = <12000000>;
+		regulator-max-microvolt = <12000000>;
+		regulator-always-on;
+		regulator-boot-on;
+	};
+
+	vsys_3v3: fixedregulator-vsys3v3 {
+		/* Output of LMS140 */
+		compatible = "regulator-fixed";
+		regulator-name = "vsys_3v3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		vin-supply = <&evm_12v0>;
+		regulator-always-on;
+		regulator-boot-on;
+	};
+
+	vsys_5v0: fixedregulator-vsys5v0 {
+		/* Output of LM5140 */
+		compatible = "regulator-fixed";
+		regulator-name = "vsys_5v0";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		vin-supply = <&evm_12v0>;
+		regulator-always-on;
+		regulator-boot-on;
+	};
+
+	vdd_mmc1: fixedregulator-sd {
+		compatible = "regulator-fixed";
+		pinctrl-names = "default";
+		pinctrl-0 = <&sd_pwr_en_pins_default>;
+		regulator-name = "vdd_mmc1";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-boot-on;
+		enable-active-high;
+		vin-supply = <&vsys_3v3>;
+		gpios = <&main_gpio0 82 GPIO_ACTIVE_HIGH>;
+	};
+
+	vdd_sd_dv_alt: gpio-regulator-TLV71033 {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&vdd_sd_dv_alt_pins_default>;
+		regulator-name = "tlv71033";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-boot-on;
+		vin-supply = <&vsys_5v0>;
+		gpios = <&main_gpio0 117 GPIO_ACTIVE_HIGH>;
+		states = <1800000 0x0>,
+			 <3300000 0x1>;
+	};
+
+	cpsw9g_virt_mac: main_r5fss_cpsw9g_virt_mac0 {
+		compatible = "ti,j721e-cpsw-virt-mac";
+		dma-coherent;
+		ti,psil-base = <0x4a00>;
+		ti,remote-name = "mpu_1_0_ethswitch-device-0";
+
+		dmas = <&main_udmap 0xca00>,
+		       <&main_udmap 0xca01>,
+		       <&main_udmap 0xca02>,
+		       <&main_udmap 0xca03>,
+		       <&main_udmap 0xca04>,
+		       <&main_udmap 0xca05>,
+		       <&main_udmap 0xca06>,
+		       <&main_udmap 0xca07>,
+		       <&main_udmap 0x4a00>;
+		dma-names = "tx0", "tx1", "tx2", "tx3",
+			    "tx4", "tx5", "tx6", "tx7",
+			    "rx";
+
+		virt_emac_port {
+			ti,label = "virt-port";
+			/* local-mac-address = [0 0 0 0 0 0]; */
+		};
+	};
+
+	transceiver1: can-phy@0 {
+		status = "disabled";
+	};
+
+	transceiver2: can-phy@1 {
+		status = "disabled";
+	};
+
+	dp_pwr_3v3: fixedregulator-dp-prw {
+		compatible = "regulator-fixed";
+		pinctrl-names = "default";
+		pinctrl-0 = <&dp0_3v3_en_pins_default>;
+		regulator-name = "dp-pwr";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpios = <&main_gpio0 49 GPIO_ACTIVE_HIGH>; /* DP0_PWR_SW_EN */
+		enable-active-high;
+
+		/* Always on for now, until dp-connector driver can handle this */
+		regulator-always-on;
+	};
+
+	dp0: connector {
+		compatible = "dp-connector";
+		label = "DP0";
+		type = "full-size";
+		dp-pwr-supply = <&dp_pwr_3v3>;
+
+		port {
+			dp_connector_in: endpoint {
+				remote-endpoint = <&dp0_out>;
+			};
+		};
+	};
+
+	clk_ov5640_fixed: ov5640-xclk {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <25000000>;
+	};
+};
+
+&main_pmx0 {
+	led_pins_default: led-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x184, PIN_INPUT, 7) /* (T23) RGMII5_RD0.GPIO0_96 */
+			J721E_IOPAD(0x180, PIN_INPUT, 7) /* (R23) RGMII5_RD1.GPIO0_95 */
+			J721E_IOPAD(0x188, PIN_INPUT, 7) /* (Y28) RGMII6_TX_CTL.GPIO0_97 */
+			J721E_IOPAD(0x1bc, PIN_INPUT, 7) /* (V24) MDIO0_MDC.GPIO0_110 */
+			J721E_IOPAD(0x1b8, PIN_INPUT, 7) /* (V26) MDIO0_MDIO.GPIO0_109 */
+		>;
+	};
+
+	main_mmc1_pins_default: main-mmc1-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x254, PIN_INPUT, 0) /* (R29) MMC1_CMD */
+			J721E_IOPAD(0x250, PIN_INPUT, 0) /* (P25) MMC1_CLK */
+			J721E_IOPAD(0x2ac, PIN_INPUT, 0) /* (P25) MMC1_CLKLB */
+			J721E_IOPAD(0x24c, PIN_INPUT, 0) /* (R24) MMC1_DAT0 */
+			J721E_IOPAD(0x248, PIN_INPUT, 0) /* (P24) MMC1_DAT1 */
+			J721E_IOPAD(0x244, PIN_INPUT, 0) /* (R25) MMC1_DAT2 */
+			J721E_IOPAD(0x240, PIN_INPUT, 0) /* (R26) MMC1_DAT3 */
+			J721E_IOPAD(0x258, PIN_INPUT, 0) /* (P23) MMC1_SDCD */
+		>;
+	};
+
+	sd_pwr_en_pins_default: sd-pwr-en-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x14c, PIN_INPUT, 7) /* (AA29) PRG0_PRU1_GPO19.GPIO0_82 */
+		>;
+	};
+
+	vdd_sd_dv_alt_pins_default: vdd-sd-dv-alt-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x1d8, PIN_INPUT, 7) /* (W4) SPI1_CS1.GPIO0_117 */
+		>;
+	};
+
+	main_usbss0_pins_default: main-usbss0-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x210, PIN_INPUT, 7) /* (W3) MCAN1_RX.GPIO1_3 - USBC_DIR */
+		>;
+	};
+
+	tusb322_pins_default: tusb322-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x214, PIN_INPUT, 7) /* (V4) MCAN1_TX.GPIO1_4 -- USBC_INT */
+		>;
+	};
+
+	main_usbss1_pins_default: main-usbss1-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x290, INPUT_DISABLE, 1) /* (U6) USB0_DRVVBUS.USB1_DRVVBUS */
+		>;
+	};
+
+	dp0_3v3_en_pins_default:dp0-3v3-en-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0xc8, PIN_INPUT, 7) /* (AE26) PRG0_PRU0_GPO6.GPIO0_49 */
+		>;
+	};
+
+	dp0_pins_default: dp0-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x1c4, PIN_INPUT, 5) /* (Y4) SPI0_CS1.DP0_HPD */
+		>;
+	};
+
+	main_i2c0_pins_default: main-i2c0-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x220, PIN_INPUT_PULLUP, 0) /* (AC5) I2C0_SCL */
+			J721E_IOPAD(0x224, PIN_INPUT_PULLUP, 0) /* (AA5) I2C0_SDA */
+		>;
+	};
+
+	main_i2c1_pins_default: main-i2c1-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x228, PIN_INPUT_PULLUP, 0) /* (Y6) I2C1_SCL */
+			J721E_IOPAD(0x22c, PIN_INPUT_PULLUP, 0) /* (AA6) I2C1_SDA */
+		>;
+	};
+
+	main_i2c3_pins_default: main-i2c3-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x270, PIN_INPUT_PULLUP, 4) /* (T26) MMC2_CLK.I2C3_SCL */
+			J721E_IOPAD(0x274, PIN_INPUT_PULLUP, 4) /* (T25) MMC2_CMD.I2C3_SDA */
+		>;
+	};
+
+	main_i2c5_pins_default: main-i2c5-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x150, PIN_INPUT_PULLUP, 2) /* (Y26) PRG0_MDIO0_MDIO.I2C5_SCL */
+			J721E_IOPAD(0x154, PIN_INPUT_PULLUP, 2) /* (AA27) PRG0_MDIO0_MDC.I2C5_SDA */
+		>;
+	};
+
+	main_spi6_pins_default: main-spi6-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x74, INPUT_DISABLE, 4) /* (AC21) PRG1_PRU1_GPO7.SPI6_CS0 */
+			J721E_IOPAD(0x28, INPUT_DISABLE, 4) /* (AG20) PRG1_PRU0_GPO9.SPI6_CS1 */
+			J721E_IOPAD(0x9c, INPUT_DISABLE, 4) /* (AC22) PRG1_PRU1_GPO17.SPI6_CLK */
+			J721E_IOPAD(0xa0, INPUT_DISABLE, 4) /* (AJ22) PRG1_PRU1_GPO18.SPI6_D0 */
+			J721E_IOPAD(0xa4, PIN_INPUT, 4) /* (AH22) PRG1_PRU1_GPO19.SPI6_D1 */
+		>;
+	};
+
+	csi0_gpio_pins_default: csi0-gpio-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x19c, PIN_INPUT_PULLDOWN, 7) /* (W27) RGMII6_TD0.GPIO0_102 */
+			J721E_IOPAD(0x1a0, PIN_INPUT_PULLDOWN, 7) /* (W29) RGMII6_TXC.GPIO0_103 */
+		>;
+	};
+
+	csi1_gpio_pins_default: csi1-gpio-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x198, PIN_INPUT_PULLDOWN, 7) /* (V25) RGMII6_TD1.GPIO0_101 */
+			J721E_IOPAD(0x1b0, PIN_INPUT_PULLDOWN, 7) /* (W24) RGMII6_RD1.GPIO0_107 */
+		>;
+	};
+
+/* macro: BONE_PIN( <pin>, <mode_name>, <register_value_macro(s)> */
+#define BONE_PIN(XX,ZZ,QQ) \
+	XX##_##ZZ##_pin: pinmux_##XX##_##ZZ##_pin { pinctrl-single,pins = < QQ >; };
+
+	/* Full P8/P9 header mode definitions */
+	/* P8_01 - GND */
+	/* P8_02 - GND */
+	BONE_PIN(P8_03, default,   P8_03(PIN_INPUT, 7))
+	BONE_PIN(P8_03, pruout,    P8_03(INPUT_DISABLE, 0))
+	BONE_PIN(P8_03, pruin,     P8_03(PIN_INPUT, 1))
+	BONE_PIN(P8_03, can,       P8_03(INPUT_EN, 6))
+	BONE_PIN(P8_03, gpio,      P8_03(INPUT_EN, 7))
+	BONE_PIN(P8_03, gpio_pu,   P8_03(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_03, gpio_pd,   P8_03(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_04, default,   P8_04(PIN_INPUT, 7))
+	BONE_PIN(P8_04, pruout,    P8_04(INPUT_DISABLE, 0))
+	BONE_PIN(P8_04, pruin,     P8_04(PIN_INPUT, 1))
+	BONE_PIN(P8_04, gpio,      P8_04(PIN_INPUT, 7))
+	BONE_PIN(P8_04, gpio_pu,   P8_04(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_04, gpio_pd,   P8_04(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_05, default,   P8_05(PIN_INPUT, 7))
+	BONE_PIN(P8_05, pruout,    P8_05(PIN_OUTPUT, 0))
+	BONE_PIN(P8_05, pruin,     P8_05(PIN_INPUT, 1))
+	BONE_PIN(P8_05, gpio,      P8_05(PIN_INPUT, 7))
+	BONE_PIN(P8_05, gpio_pu,   P8_05(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_05, gpio_pd,   P8_05(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_06, default,   P8_06(PIN_INPUT, 7))
+	BONE_PIN(P8_06, pruout,    P8_06(PIN_OUTPUT, 0))
+	BONE_PIN(P8_06, pruin,     P8_06(PIN_INPUT, 1))
+	BONE_PIN(P8_06, gpio,      P8_06(PIN_INPUT, 7))
+	BONE_PIN(P8_06, gpio_pu,   P8_06(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_06, gpio_pd,   P8_06(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_07, default,   P8_07(PIN_INPUT, 7))
+	BONE_PIN(P8_07, pruout,    P8_07(PIN_OUTPUT, 0))
+	BONE_PIN(P8_07, pruin,     P8_07(PIN_INPUT, 1))
+	BONE_PIN(P8_07, gpio,      P8_07(PIN_INPUT, 7))
+	BONE_PIN(P8_07, gpio_pu,   P8_07(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_07, gpio_pd,   P8_07(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_08, default,   P8_08(PIN_INPUT, 7))
+	BONE_PIN(P8_08, pruout,    P8_08(PIN_OUTPUT, 0))
+	BONE_PIN(P8_08, pruin,     P8_08(PIN_INPUT, 1))
+	BONE_PIN(P8_08, gpio,      P8_08(PIN_INPUT, 7))
+	BONE_PIN(P8_08, gpio_pu,   P8_08(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_08, gpio_pd,   P8_08(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_09, default,   P8_09(PIN_INPUT, 7))
+	BONE_PIN(P8_09, pruout,    P8_09(PIN_OUTPUT, 0))
+	BONE_PIN(P8_09, pruin,     P8_09(PIN_INPUT, 1))
+	BONE_PIN(P8_09, gpio,      P8_09(PIN_INPUT, 7))
+	BONE_PIN(P8_09, gpio_pu,   P8_09(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_09, gpio_pd,   P8_09(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_10, default,   P8_10(PIN_INPUT, 7))
+	BONE_PIN(P8_10, pruout,    P8_10(PIN_OUTPUT, 0))
+	BONE_PIN(P8_10, pruin,     P8_10(PIN_INPUT, 1))
+	BONE_PIN(P8_10, gpio,      P8_10(PIN_INPUT, 7))
+	BONE_PIN(P8_10, gpio_pu,   P8_10(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_10, gpio_pd,   P8_10(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_11, default,   P8_11(PIN_INPUT, 7))
+	BONE_PIN(P8_11, pruout,    P8_11(PIN_OUTPUT, 0))
+	BONE_PIN(P8_11, pruin,     P8_11(PIN_INPUT, 1))
+	BONE_PIN(P8_11, gpio,      P8_11(PIN_INPUT, 7))
+	BONE_PIN(P8_11, gpio_pu,   P8_11(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_11, gpio_pd,   P8_11(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_12, default,   P8_12(PIN_INPUT, 7))
+	BONE_PIN(P8_12, pruout,    P8_12(PIN_OUTPUT, 0))
+	BONE_PIN(P8_12, pruin,     P8_12(PIN_INPUT, 1))
+	BONE_PIN(P8_12, gpio,      P8_12(PIN_INPUT, 7))
+	BONE_PIN(P8_12, gpio_pu,   P8_12(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_12, gpio_pd,   P8_12(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_13, default,   P8_13(PIN_INPUT, 7))
+	//BONE_PIN(P8_13, i2c,       P8_13(PIN_OUTPUT, 2)) /* I2C3_SCL */
+	BONE_PIN(P8_13, pwm,       P8_13(PIN_OUTPUT, 6))
+	BONE_PIN(P8_13, gpio,      P8_13(PIN_INPUT, 7))
+	BONE_PIN(P8_13, gpio_pu,   P8_13(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_13, gpio_pd,   P8_13(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_14, default,   P8_14(PIN_INPUT, 7))
+	BONE_PIN(P8_14, pruout,    P8_14(PIN_OUTPUT, 0))
+	BONE_PIN(P8_14, pruin,     P8_14(PIN_INPUT, 1))
+	BONE_PIN(P8_14, gpio,      P8_14(PIN_INPUT, 7))
+	BONE_PIN(P8_14, gpio_pu,   P8_14(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_14, gpio_pd,   P8_14(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_15, default,   P8_15(PIN_INPUT, 7))
+	BONE_PIN(P8_15, pruout,    P8_15(PIN_OUTPUT, 0))
+	BONE_PIN(P8_15, pruin,     P8_15(PIN_INPUT, 1))
+	BONE_PIN(P8_15, gpio,      P8_15(PIN_INPUT, 7))
+	BONE_PIN(P8_15, gpio_pu,   P8_15(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_15, gpio_pd,   P8_15(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_16, default,   P8_16(PIN_INPUT, 7))
+	BONE_PIN(P8_16, pruout,    P8_16(PIN_OUTPUT, 0))
+	BONE_PIN(P8_16, pruin,     P8_16(PIN_INPUT, 1))
+	BONE_PIN(P8_16, gpio,      P8_16(PIN_INPUT, 7))
+	BONE_PIN(P8_16, gpio_pu,   P8_16(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_16, gpio_pd,   P8_16(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_17, default,   P8_17(PIN_INPUT, 7))
+	BONE_PIN(P8_17, pruout,    P8_17(PIN_OUTPUT, 0))
+	BONE_PIN(P8_17, pruin,     P8_17(PIN_INPUT, 1))
+	BONE_PIN(P8_17, gpio,      P8_17(PIN_INPUT, 7))
+	BONE_PIN(P8_17, gpio_pu,   P8_17(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_17, gpio_pd,   P8_17(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_18, default,   P8_18(PIN_INPUT, 7))
+	BONE_PIN(P8_18, pruout,    P8_18(PIN_OUTPUT, 0))
+	BONE_PIN(P8_18, pruin,     P8_18(PIN_INPUT, 1))
+	BONE_PIN(P8_18, gpio,      P8_18(PIN_INPUT, 7))
+	BONE_PIN(P8_18, gpio_pu,   P8_18(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_18, gpio_pd,   P8_18(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_19, default,   P8_19(PIN_INPUT, 7))
+	BONE_PIN(P8_19, pwm,       P8_19(PIN_OUTPUT, 6))
+	BONE_PIN(P8_19, gpio,      P8_19(PIN_INPUT, 7))
+	BONE_PIN(P8_19, gpio_pu,   P8_19(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_19, gpio_pd,   P8_19(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_20, default,   P8_20(PIN_INPUT, 7))
+	BONE_PIN(P8_20, pruout,    P8_20(PIN_OUTPUT, 0))
+	BONE_PIN(P8_20, pruin,     P8_20(PIN_INPUT, 1))
+	BONE_PIN(P8_20, gpio,      P8_20(PIN_INPUT, 7))
+	BONE_PIN(P8_20, gpio_pu,   P8_20(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_20, gpio_pd,   P8_20(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_21, default,   P8_21(PIN_INPUT, 7))
+	BONE_PIN(P8_21, pruout,    P8_21(PIN_OUTPUT, 0))
+	BONE_PIN(P8_21, pruin,     P8_21(PIN_INPUT, 1))
+	BONE_PIN(P8_21, pruuart,   P8_21(PIN_INPUT, 2))
+	BONE_PIN(P8_21, gpio,      P8_21(PIN_INPUT, 7))
+	BONE_PIN(P8_21, gpio_pu,   P8_21(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_21, gpio_pd,   P8_21(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_22, default,   P8_22(PIN_INPUT, 7))
+	BONE_PIN(P8_22, pruout,    P8_22(PIN_OUTPUT, 0))
+	BONE_PIN(P8_22, pruin,     P8_22(PIN_INPUT, 1))
+	BONE_PIN(P8_22, gpio,      P8_22(PIN_INPUT, 7))
+	BONE_PIN(P8_22, gpio_pu,   P8_22(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_22, gpio_pd,   P8_22(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P8_22, uart,      P8_22(PIN_INPUT, 14)) /* UART2_RX */
+
+	BONE_PIN(P8_23, default,   P8_23(PIN_INPUT, 7))
+	BONE_PIN(P8_23, pruout,    P8_23(PIN_OUTPUT, 0))
+	BONE_PIN(P8_23, pruin,     P8_23(PIN_INPUT, 1))
+	BONE_PIN(P8_23, pruuart,   P8_23(PIN_OUTPUT, 2))
+	BONE_PIN(P8_23, gpio,      P8_23(PIN_INPUT, 7))
+	BONE_PIN(P8_23, gpio_pu,   P8_23(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_23, gpio_pd,   P8_23(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_24, default,   P8_24(PIN_INPUT, 7))
+	BONE_PIN(P8_24, pruout,    P8_24(PIN_OUTPUT, 0))
+	BONE_PIN(P8_24, pruin,     P8_24(PIN_INPUT, 1))
+	BONE_PIN(P8_24, gpio,      P8_24(PIN_INPUT, 7))
+	BONE_PIN(P8_24, gpio_pu,   P8_24(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_24, gpio_pd,   P8_24(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_25, default,   P8_25(PIN_INPUT, 7))
+	BONE_PIN(P8_25, pruout,    P8_25(PIN_OUTPUT, 0))
+	BONE_PIN(P8_25, pruin,     P8_25(PIN_INPUT, 1))
+	BONE_PIN(P8_25, gpio,      P8_25(PIN_INPUT, 7))
+	BONE_PIN(P8_25, gpio_pu,   P8_25(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_25, gpio_pd,   P8_25(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_26, default,   P8_26(PIN_INPUT, 7))
+	BONE_PIN(P8_26, pruout,    P8_26(PIN_OUTPUT, 0))
+	BONE_PIN(P8_26, pruin,     P8_26(PIN_INPUT, 1))
+	BONE_PIN(P8_26, gpio,      P8_26(PIN_INPUT, 7))
+	BONE_PIN(P8_26, gpio_pu,   P8_26(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_26, gpio_pd,   P8_26(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_27, default,   P8_27(PIN_INPUT, 7))
+	BONE_PIN(P8_27, pruout,    P8_27(PIN_OUTPUT, 0))
+	BONE_PIN(P8_27, pruin,     P8_27(PIN_INPUT, 1))
+	BONE_PIN(P8_27, can,       P8_27(PIN_OUTPUT, 6))
+	BONE_PIN(P8_27, gpio,      P8_27(PIN_INPUT, 7))
+	BONE_PIN(P8_27, gpio_pu,   P8_27(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_27, gpio_pd,   P8_27(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_28, default,   P8_28(PIN_INPUT, 7))
+	BONE_PIN(P8_28, pruout,    P8_28(PIN_OUTPUT, 0))
+	BONE_PIN(P8_28, pruin,     P8_28(PIN_INPUT, 1))
+	BONE_PIN(P8_28, gpio,      P8_28(PIN_INPUT, 7))
+	BONE_PIN(P8_28, gpio_pu,   P8_28(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_28, gpio_pd,   P8_28(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P8_28, uart,      P8_28(PIN_INPUT, 14)) /* UART8_RX */
+
+	BONE_PIN(P8_29, default,   P8_29(PIN_INPUT, 7))
+	BONE_PIN(P8_29, pruout,    P8_29(PIN_OUTPUT, 0))
+	BONE_PIN(P8_29, pruin,     P8_29(PIN_INPUT, 1))
+	BONE_PIN(P8_29, gpio,      P8_29(PIN_INPUT, 7))
+	BONE_PIN(P8_29, gpio_pu,   P8_29(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_29, gpio_pd,   P8_29(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P8_29, uart,      P8_29(PIN_OUTPUT, 14)) /* UART8_TX */
+
+	BONE_PIN(P8_30, default,   P8_30(PIN_INPUT, 7))
+	BONE_PIN(P8_30, pruout,    P8_30(PIN_OUTPUT, 0))
+	BONE_PIN(P8_30, pruin,     P8_30(PIN_INPUT, 1))
+	BONE_PIN(P8_30, gpio,      P8_30(PIN_INPUT, 7))
+	BONE_PIN(P8_30, gpio_pu,   P8_30(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_30, gpio_pd,   P8_30(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_31, default,   P8_31A(PIN_INPUT, 7) P8_31B(PIN_INPUT, 7))
+	BONE_PIN(P8_31, pruout,    P8_31A(PIN_OUTPUT, 0) P8_31B(PIN_INPUT, 7))
+	BONE_PIN(P8_31, pruin,     P8_31A(PIN_INPUT, 1) P8_31B(PIN_INPUT, 7))
+	BONE_PIN(P8_31, gpio,      P8_31A(PIN_INPUT, 7) P8_31B(PIN_INPUT, 7))
+	BONE_PIN(P8_31, gpio_pu,   P8_31A(PIN_INPUT_PULLUP, 7) P8_31B(PIN_INPUT, 7))
+	BONE_PIN(P8_31, gpio_pd,   P8_31A(PIN_INPUT_PULLDOWN, 7) P8_31B(PIN_INPUT, 7))
+
+	BONE_PIN(P8_32, default,   P8_32A(PIN_INPUT, 7) P8_32B(PIN_INPUT, 7))
+	BONE_PIN(P8_32, pruout,    P8_32A(PIN_OUTPUT, 0) P8_32B(PIN_INPUT, 7))
+	BONE_PIN(P8_32, pruin,     P8_32A(PIN_INPUT, 1) P8_32B(PIN_INPUT, 7))
+	BONE_PIN(P8_32, gpio,      P8_32A(PIN_INPUT, 7) P8_32B(PIN_INPUT, 7))
+	BONE_PIN(P8_32, gpio_pu,   P8_32A(PIN_INPUT_PULLUP, 7) P8_32B(PIN_INPUT, 7))
+	BONE_PIN(P8_32, gpio_pd,   P8_32A(PIN_INPUT_PULLDOWN, 7) P8_32B(PIN_INPUT, 7))
+
+	BONE_PIN(P8_33, default,   P8_33A(PIN_INPUT, 7) P8_33B(PIN_INPUT, 7))
+	BONE_PIN(P8_33, pruout,    P8_33A(PIN_OUTPUT, 0) P8_33B(PIN_INPUT, 7))
+	BONE_PIN(P8_33, pruin,     P8_33A(PIN_INPUT, 1) P8_33B(PIN_INPUT, 7))
+	BONE_PIN(P8_33, gpio,      P8_33A(PIN_INPUT, 7) P8_33B(PIN_INPUT, 7))
+	BONE_PIN(P8_33, gpio_pu,   P8_33A(PIN_INPUT_PULLUP, 7) P8_33B(PIN_INPUT, 7))
+	BONE_PIN(P8_33, gpio_pd,   P8_33A(PIN_INPUT_PULLDOWN, 7) P8_33B(PIN_INPUT, 7))
+	BONE_PIN(P8_33, qep,       P8_33A(PIN_INPUT, 9) P8_33B(PIN_INPUT, 7)) /* EQEP1_B */
+
+	BONE_PIN(P8_34, default,   P8_34(PIN_INPUT, 7))
+	BONE_PIN(P8_34, pruout,    P8_34(PIN_OUTPUT, 0))
+	BONE_PIN(P8_34, pruin,     P8_34(PIN_INPUT, 1))
+	BONE_PIN(P8_34, gpio,      P8_34(PIN_INPUT, 7))
+	BONE_PIN(P8_34, gpio_pu,   P8_34(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_34, gpio_pd,   P8_34(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P8_34, uart,      P8_34(PIN_OUTPUT, 14)) /* UART2_TX */
+
+	BONE_PIN(P8_35, default,   P8_35A(PIN_INPUT, 7) P8_35B(PIN_INPUT, 7))
+	BONE_PIN(P8_35, pruout,    P8_35A(PIN_OUTPUT, 0) P8_35B(PIN_INPUT, 7))
+	BONE_PIN(P8_35, pruin,     P8_35A(PIN_INPUT, 1) P8_35B(PIN_INPUT, 7))
+	BONE_PIN(P8_35, gpio,      P8_35A(PIN_INPUT, 7) P8_35B(PIN_INPUT, 7))
+	BONE_PIN(P8_35, gpio_pu,   P8_35A(PIN_INPUT_PULLUP, 7) P8_35B(PIN_INPUT, 7))
+	BONE_PIN(P8_35, gpio_pd,   P8_35A(PIN_INPUT_PULLDOWN, 7) P8_35B(PIN_INPUT, 7))
+	BONE_PIN(P8_35, qep,       P8_35A(PIN_INPUT, 9) P8_35B(PIN_INPUT, 7)) /* EQEP1_A */
+
+	BONE_PIN(P8_36, default,   P8_36(PIN_INPUT, 7))
+	BONE_PIN(P8_36, pruout,    P8_36(PIN_OUTPUT, 0))
+	BONE_PIN(P8_36, pruin,     P8_36(PIN_INPUT, 1))
+	BONE_PIN(P8_36, can,       P8_36(PIN_OUTPUT, 6))
+	BONE_PIN(P8_36, gpio,      P8_36(PIN_INPUT, 7))
+	BONE_PIN(P8_36, gpio_pu,   P8_36(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_36, gpio_pd,   P8_36(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_37, default,   P8_37A(PIN_INPUT, 7) P8_37B(PIN_INPUT, 7))
+	BONE_PIN(P8_37, pruout,    P8_37A(PIN_OUTPUT, 0) P8_37B(PIN_INPUT, 7))
+	BONE_PIN(P8_37, pruin,     P8_37A(PIN_INPUT, 1) P8_37B(PIN_INPUT, 7))
+	BONE_PIN(P8_37, gpio,      P8_37A(PIN_INPUT, 7) P8_37B(PIN_INPUT, 7))
+	BONE_PIN(P8_37, gpio_pu,   P8_37A(PIN_INPUT_PULLUP, 7) P8_37B(PIN_INPUT, 7))
+	BONE_PIN(P8_37, gpio_pd,   P8_37A(PIN_INPUT_PULLDOWN, 7) P8_37B(PIN_INPUT, 7))
+	BONE_PIN(P8_37, uart,      P8_37A(PIN_INPUT, 7) P8_37B(PIN_OUTPUT, 3)) /* UART5_TX */
+
+	BONE_PIN(P8_38, default,   P8_38A(PIN_INPUT, 7) P8_38B(PIN_INPUT, 7))
+	BONE_PIN(P8_38, pruout,    P8_38A(PIN_OUTPUT, 0) P8_38B(PIN_INPUT, 7))
+	BONE_PIN(P8_38, pruin,     P8_38A(PIN_INPUT, 1) P8_38B(PIN_INPUT, 7))
+	BONE_PIN(P8_38, gpio,      P8_38A(PIN_INPUT, 7) P8_38B(PIN_INPUT, 7))
+	BONE_PIN(P8_38, gpio_pu,   P8_38A(PIN_INPUT_PULLUP, 7) P8_38B(PIN_INPUT, 7))
+	BONE_PIN(P8_38, gpio_pd,   P8_38A(PIN_INPUT_PULLDOWN, 7) P8_38B(PIN_INPUT, 7))
+	BONE_PIN(P8_38, uart,      P8_38A(PIN_INPUT, 7) P8_38B(PIN_INPUT, 3)) /* UART5_RX */
+
+	BONE_PIN(P8_39, default,   P8_39(PIN_INPUT, 7))
+	BONE_PIN(P8_39, pruout,    P8_39(PIN_OUTPUT, 0))
+	BONE_PIN(P8_39, pruin,     P8_39(PIN_INPUT, 1))
+	BONE_PIN(P8_39, gpio,      P8_39(PIN_INPUT, 7))
+	BONE_PIN(P8_39, gpio_pu,   P8_39(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_39, gpio_pd,   P8_39(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_40, default,   P8_40(PIN_INPUT, 7))
+	BONE_PIN(P8_40, pruout,    P8_40(PIN_OUTPUT, 0))
+	BONE_PIN(P8_40, pruin,     P8_40(PIN_INPUT, 1))
+	BONE_PIN(P8_40, gpio,      P8_40(PIN_INPUT, 7))
+	BONE_PIN(P8_40, gpio_pu,   P8_40(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_40, gpio_pd,   P8_40(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_41, default,   P8_41(PIN_INPUT, 7))
+	BONE_PIN(P8_41, pruout,    P8_41(PIN_OUTPUT, 0))
+	BONE_PIN(P8_41, pruin,     P8_41(PIN_INPUT, 1))
+	BONE_PIN(P8_41, gpio,      P8_41(PIN_INPUT, 7))
+	BONE_PIN(P8_41, gpio_pu,   P8_41(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_41, gpio_pd,   P8_41(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_42, default,   P8_42(PIN_INPUT, 7))
+	BONE_PIN(P8_42, pruout,    P8_42(PIN_OUTPUT, 0))
+	BONE_PIN(P8_42, pruin,     P8_42(PIN_INPUT, 1))
+	BONE_PIN(P8_42, gpio,      P8_42(PIN_INPUT, 7))
+	BONE_PIN(P8_42, gpio_pu,   P8_42(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_42, gpio_pd,   P8_42(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_43, default,   P8_43(PIN_INPUT, 7))
+	BONE_PIN(P8_43, pruout,    P8_43(PIN_OUTPUT, 0))
+	BONE_PIN(P8_43, pruin,     P8_43(PIN_INPUT, 1))
+	BONE_PIN(P8_43, gpio,      P8_43(PIN_INPUT, 7))
+	BONE_PIN(P8_43, gpio_pu,   P8_43(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_43, gpio_pd,   P8_43(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_44, default,   P8_44(PIN_INPUT, 7))
+	BONE_PIN(P8_44, pruout,    P8_44(PIN_OUTPUT, 0))
+	BONE_PIN(P8_44, pruin,     P8_44(PIN_INPUT, 1))
+	BONE_PIN(P8_44, gpio,      P8_44(PIN_INPUT, 7))
+	BONE_PIN(P8_44, gpio_pu,   P8_44(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_44, gpio_pd,   P8_44(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_45, default,   P8_45(PIN_INPUT, 7))
+	BONE_PIN(P8_45, pruout,    P8_45(PIN_OUTPUT, 0))
+	BONE_PIN(P8_45, pruin,     P8_45(PIN_INPUT, 1))
+	BONE_PIN(P8_45, gpio,      P8_45(PIN_INPUT, 7))
+	BONE_PIN(P8_45, gpio_pu,   P8_45(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_45, gpio_pd,   P8_45(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P8_46, default,   P8_46(PIN_INPUT, 7))
+	BONE_PIN(P8_46, pruout,    P8_46(PIN_OUTPUT, 0))
+	BONE_PIN(P8_46, pruin,     P8_46(PIN_INPUT, 1))
+	BONE_PIN(P8_46, gpio,      P8_46(PIN_INPUT, 7))
+	BONE_PIN(P8_46, gpio_pu,   P8_46(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P8_46, gpio_pd,   P8_46(PIN_INPUT_PULLDOWN, 7))
+
+	/* Full P9 header mode definitions */
+	/* P9_01 - GND */
+	/* P9_02 - GND */
+	/* P9_03 - VOUT_3V3 */
+	/* P9_04 - VOUT_3V3 */
+	/* P9_05 - VIN */
+	/* P9_06 - VIN */
+	/* P9_07 - VOUT_SYS */
+	/* P9_08 - VOUT_SYS */
+	/* P9_09 - RESET# */
+	/* P9_10 - POWER# */
+
+	BONE_PIN(P9_11, default,   P9_11(PIN_INPUT, 7))
+	BONE_PIN(P9_11, pruout,    P9_11(PIN_OUTPUT, 0))
+	BONE_PIN(P9_11, pruin,     P9_11(PIN_INPUT, 1))
+	BONE_PIN(P9_11, gpio,      P9_11(PIN_INPUT, 7))
+	BONE_PIN(P9_11, gpio_pu,   P9_11(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_11, gpio_pd,   P9_11(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P9_11, uart,      P9_11(PIN_INPUT, 14)) /* UART0_RX */
+
+	BONE_PIN(P9_12, default,   P9_12(PIN_INPUT, 7))
+	BONE_PIN(P9_12, pruout,    P9_12(PIN_OUTPUT, 0))
+	BONE_PIN(P9_12, pruin,     P9_12(PIN_INPUT, 1))
+	BONE_PIN(P9_12, gpio,      P9_12(PIN_INPUT, 7))
+	BONE_PIN(P9_12, gpio_pu,   P9_12(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_12, gpio_pd,   P9_12(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_13, default,   P9_13(PIN_INPUT, 7))
+	BONE_PIN(P9_13, pruout,    P9_13(PIN_OUTPUT, 0))
+	BONE_PIN(P9_13, pruin,     P9_13(PIN_INPUT, 1))
+	BONE_PIN(P9_13, gpio,      P9_13(PIN_INPUT, 7))
+	BONE_PIN(P9_13, gpio_pu,   P9_13(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_13, gpio_pd,   P9_13(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P9_13, uart,      P9_13(PIN_OUTPUT, 14)) /* UART0_TX */
+
+	BONE_PIN(P9_14, default,   P9_14(PIN_INPUT, 7))
+	BONE_PIN(P9_14, uart,      P9_14(PIN_INPUT, 3))
+	BONE_PIN(P9_14, pwm,       P9_14(PIN_OUTPUT, 6))
+	BONE_PIN(P9_14, gpio,      P9_14(PIN_INPUT, 7))
+	BONE_PIN(P9_14, gpio_pu,   P9_14(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_14, gpio_pd,   P9_14(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_15, default,   P9_15(PIN_INPUT, 7))
+	BONE_PIN(P9_15, pruout,    P9_15(PIN_OUTPUT, 0))
+	BONE_PIN(P9_15, pruin,     P9_15(PIN_INPUT, 1))
+	BONE_PIN(P9_15, gpio,      P9_15(PIN_INPUT, 7))
+	BONE_PIN(P9_15, gpio_pu,   P9_15(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_15, gpio_pd,   P9_15(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_16, default,   P9_16(PIN_INPUT, 7))
+	BONE_PIN(P9_16, pruout,    P9_16(PIN_OUTPUT, 0))
+	BONE_PIN(P9_16, pruin,     P9_16(PIN_INPUT, 1))
+	BONE_PIN(P9_16, pwm,       P9_16(PIN_OUTPUT, 6))
+	BONE_PIN(P9_16, gpio,      P9_16(PIN_INPUT, 7))
+	BONE_PIN(P9_16, gpio_pu,   P9_16(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_16, gpio_pd,   P9_16(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_17, default,   P9_17A(PIN_INPUT, 7) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, pruout,    P9_17A(PIN_OUTPUT, 0) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, pruin,     P9_17A(PIN_INPUT, 1) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, spi,       P9_17A(PIN_OUTPUT, 4) P9_17B(PIN_INPUT, 7)) /* SPI6_CS0 */
+	BONE_PIN(P9_17, can,       P9_17A(PIN_OUTPUT, 6) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, gpio,      P9_17A(PIN_INPUT, 7) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, gpio_pu,   P9_17A(PIN_INPUT_PULLUP, 7) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, gpio_pd,   P9_17A(PIN_INPUT_PULLDOWN, 7) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, uart,      P9_17A(PIN_OUTPUT, 14) P9_17B(PIN_INPUT, 7))
+	BONE_PIN(P9_17, i2c,       P9_17A(PIN_INPUT, 7) P9_17B(PIN_OUTPUT, 2)) /* I2C6_SCL */
+
+	BONE_PIN(P9_18, default,   P9_18A(PIN_INPUT, 7) P9_18B(PIN_INPUT, 7))
+	BONE_PIN(P9_18, pruout,    P9_18A(PIN_OUTPUT, 0) P9_18B(PIN_INPUT, 7))
+	BONE_PIN(P9_18, pruin,     P9_18A(PIN_INPUT, 1) P9_18B(PIN_INPUT, 7))
+	BONE_PIN(P9_18, spi,       P9_18A(PIN_OUTPUT, 4) P9_18B(PIN_INPUT, 7)) /* SPI6_D1 */
+	BONE_PIN(P9_18, gpio,      P9_18A(PIN_INPUT, 7) P9_18B(PIN_INPUT, 7))
+	BONE_PIN(P9_18, gpio_pu,   P9_18A(PIN_INPUT_PULLUP, 7) P9_18B(PIN_INPUT, 7))
+	BONE_PIN(P9_18, gpio_pd,   P9_18A(PIN_INPUT_PULLDOWN, 7) P9_18B(PIN_INPUT, 7))
+	BONE_PIN(P9_18, i2c,       P9_18A(PIN_INPUT, 7) P9_18B(PIN_OUTPUT, 2)) /* I2C6_SDA */
+
+	BONE_PIN(P9_19, default,   P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT, 7))
+	BONE_PIN(P9_19, i2c,       P9_19A(PIN_OUTPUT_PULLUP, 2) P9_19B(PIN_INPUT, 7)) /* I2C2_SCL */
+	BONE_PIN(P9_19, pruout,    P9_19A(PIN_INPUT, 7) P9_19B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_19, pruin,     P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT, 1))
+	BONE_PIN(P9_19, gpio,      P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT, 7))
+	BONE_PIN(P9_19, gpio_pu,   P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_19, gpio_pd,   P9_19A(PIN_INPUT, 7) P9_19B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_20, default,   P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT, 7))
+	BONE_PIN(P9_20, i2c,       P9_20A(PIN_OUTPUT_PULLUP, 2) P9_20B(PIN_INPUT, 7)) /* I2C2_SDA */
+	BONE_PIN(P9_20, pruout,    P9_20A(PIN_INPUT, 7) P9_20B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_20, pruin,     P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT, 1))
+	BONE_PIN(P9_20, gpio,      P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT, 7))
+	BONE_PIN(P9_20, gpio_pu,   P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_20, gpio_pd,   P9_20A(PIN_INPUT, 7) P9_20B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_21, default,   P9_21A(PIN_INPUT, 7) P9_21B(PIN_INPUT, 7))
+	BONE_PIN(P9_21, pruout,    P9_21A(PIN_OUTPUT, 0) P9_21B(PIN_INPUT, 7))
+	BONE_PIN(P9_21, pruin,     P9_21A(PIN_INPUT, 1) P9_21B(PIN_INPUT, 7))
+	BONE_PIN(P9_21, spi,       P9_21A(PIN_OUTPUT, 4) P9_21B(PIN_INPUT, 7)) /* SPI6_D0 */
+	BONE_PIN(P9_21, gpio,      P9_21A(PIN_INPUT, 7) P9_21B(PIN_INPUT, 7))
+	BONE_PIN(P9_21, gpio_pu,   P9_21A(PIN_INPUT_PULLUP, 7) P9_21B(PIN_INPUT, 7))
+	BONE_PIN(P9_21, gpio_pd,   P9_21A(PIN_INPUT_PULLDOWN, 7) P9_21B(PIN_INPUT, 7))
+	/* BONE_PIN(P9_21, i2c,       P9_21A(PIN_INPUT, 7) P9_21B(PIN_OUTPUT_PULLUP, 2)) /* I2C3_SDA - TODO: no match? */
+	BONE_PIN(P9_21, pwm,       P9_21A(PIN_INPUT, 7) P9_21B(PIN_OUTPUT, 6)) /* EHRPWM1_A */
+
+	BONE_PIN(P9_22, default,   P9_22A(PIN_INPUT, 7) P9_22B(PIN_INPUT, 7))
+	BONE_PIN(P9_22, pruout,    P9_22A(PIN_OUTPUT, 0) P9_22B(PIN_INPUT, 7))
+	BONE_PIN(P9_22, pruin,     P9_22A(PIN_INPUT, 1) P9_22B(PIN_INPUT, 7))
+	BONE_PIN(P9_22, spi,       P9_22A(PIN_OUTPUT, 4) P9_22B(PIN_INPUT, 7)) /* SPI6_CLK */
+	BONE_PIN(P9_22, gpio,      P9_22A(PIN_INPUT, 7) P9_22B(PIN_INPUT, 7))
+	BONE_PIN(P9_22, gpio_pu,   P9_22A(PIN_INPUT_PULLUP, 7) P9_22B(PIN_INPUT, 7))
+	BONE_PIN(P9_22, gpio_pd,   P9_22A(PIN_INPUT_PULLDOWN, 7) P9_22B(PIN_INPUT, 7))
+	/* BONE_PIN(P9_22, i2c,       P9_22A(PIN_INPUT, 7) P9_22B(PIN_OUTPUT_PULLUP, 2)) /* I2C6_SDA - TODO: no match? */
+	BONE_PIN(P9_22, pwm,       P9_22A(PIN_INPUT, 7) P9_22B(PIN_OUTPUT, 6)) /* EHRPWM1_B */
+
+	BONE_PIN(P9_23, default,   P9_23(PIN_INPUT, 7))
+	BONE_PIN(P9_23, pruout,    P9_23(PIN_OUTPUT, 0))
+	BONE_PIN(P9_23, pruin,     P9_23(PIN_INPUT, 1))
+	BONE_PIN(P9_23, spi,       P9_23(PIN_OUTPUT, 4)) /* SPI6_CS1 */
+	BONE_PIN(P9_23, gpio,      P9_23(PIN_INPUT, 7))
+	BONE_PIN(P9_23, gpio_pu,   P9_23(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_23, gpio_pd,   P9_23(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_24, default,   P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT, 7))
+	BONE_PIN(P9_24, uart,      P9_24A(PIN_INPUT, 3) P9_24B(PIN_OUTPUT, 7)) /* UART2_TX */
+	BONE_PIN(P9_24, pruout,    P9_24A(PIN_INPUT, 7) P9_24B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_24, pruin,     P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT, 1))
+	BONE_PIN(P9_24, gpio,      P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT, 7))
+	BONE_PIN(P9_24, gpio_pu,   P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_24, gpio_pd,   P9_24A(PIN_INPUT, 7) P9_24B(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P9_24, i2c,       P9_24A(PIN_INPUT_PULLUP, 2) P9_24B(PIN_INPUT, 7)) /* I2C4_SCL */
+
+	BONE_PIN(P9_25, default,   P9_25A(PIN_INPUT, 7) P9_25B(PIN_INPUT, 7))
+	BONE_PIN(P9_25, can,       P9_25A(PIN_INPUT, 1) P9_25B(PIN_INPUT, 7))
+	BONE_PIN(P9_25, pwm,       P9_25A(PIN_INPUT, 7) P9_25B(PIN_OUTPUT, 6)) /* EHRPWM4_B */
+	BONE_PIN(P9_25, gpio,      P9_25A(PIN_INPUT, 7) P9_25B(PIN_INPUT, 7))
+	BONE_PIN(P9_25, gpio_pu,   P9_25A(PIN_INPUT_PULLUP, 7) P9_25B(PIN_INPUT, 7))
+	BONE_PIN(P9_25, gpio_pd,   P9_25A(PIN_INPUT_PULLDOWN, 7) P9_25B(PIN_INPUT, 7))
+
+	BONE_PIN(P9_26, default,   P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT, 7))
+	BONE_PIN(P9_26, uart,      P9_26A(PIN_INPUT, 3) P9_26B(PIN_INPUT, 7)) /* UART2_RX */
+	BONE_PIN(P9_26, pruout,    P9_26A(PIN_INPUT, 7) P9_26B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_26, pruin,     P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT, 1))
+	BONE_PIN(P9_26, gpio,      P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT, 7))
+	BONE_PIN(P9_26, gpio_pu,   P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_26, gpio_pd,   P9_26A(PIN_INPUT, 7) P9_26B(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P9_26, i2c,       P9_26A(PIN_INPUT_PULLUP, 2) P9_26B(PIN_INPUT, 7)) /* I2C4_SDA */
+
+	BONE_PIN(P9_27, default,   P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT, 7))
+	BONE_PIN(P9_27, pruout,    P9_27A(PIN_OUTPUT, 0) P9_27B(PIN_INPUT, 7))
+	BONE_PIN(P9_27, pruin,     P9_27A(PIN_INPUT, 1) P9_27B(PIN_INPUT, 7))
+	BONE_PIN(P9_27, qep,       P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT, 5)) /* EQEP0_B */
+	BONE_PIN(P9_27, gpio,      P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT, 7))
+	BONE_PIN(P9_27, gpio_pu,   P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_27, gpio_pd,   P9_27A(PIN_INPUT, 7) P9_27B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_28, default,   P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT, 7))
+	BONE_PIN(P9_28, pruout,    P9_28A(PIN_INPUT, 7) P9_28B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_28, pruin,     P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT, 1))
+	BONE_PIN(P9_28, gpio,      P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT, 7))
+	BONE_PIN(P9_28, gpio_pu,   P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_28, gpio_pd,   P9_28A(PIN_INPUT, 7) P9_28B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_29, default,   P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT, 7))
+	BONE_PIN(P9_29, pruout,    P9_29A(PIN_INPUT, 7) P9_29B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_29, pruin,     P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT, 1))
+	BONE_PIN(P9_29, gpio,      P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT, 7))
+	BONE_PIN(P9_29, gpio_pu,   P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_29, gpio_pd,   P9_29A(PIN_INPUT, 7) P9_29B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_30, default,   P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT, 7))
+	BONE_PIN(P9_30, pruout,    P9_30A(PIN_INPUT, 7) P9_30B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_30, pruin,     P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT, 1))
+	BONE_PIN(P9_30, gpio,      P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT, 7))
+	BONE_PIN(P9_30, gpio_pu,   P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_30, gpio_pd,   P9_30A(PIN_INPUT, 7) P9_30B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_31, default,   P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT, 7))
+	BONE_PIN(P9_31, pruout,    P9_31A(PIN_INPUT, 7) P9_31B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_31, pruin,     P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT, 1))
+	BONE_PIN(P9_31, gpio,      P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT, 7))
+	BONE_PIN(P9_31, gpio_pu,   P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_31, gpio_pd,   P9_31A(PIN_INPUT, 7) P9_31B(PIN_INPUT_PULLDOWN, 7))
+
+	/* P9_32 - ADC_REF_OUT */
+
+	BONE_PIN(P9_33, default,   P9_33B(PIN_INPUT, 7))
+	BONE_PIN(P9_33, pruout,    P9_33B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_33, pruin,     P9_33B(PIN_INPUT, 1))
+	BONE_PIN(P9_33, gpio,      P9_33B(PIN_INPUT, 7))
+	BONE_PIN(P9_33, gpio_pu,   P9_33B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_33, gpio_pd,   P9_33B(PIN_INPUT_PULLDOWN, 7))
+
+	/* P9_34 - ADC_GND */
+
+	BONE_PIN(P9_35, default,   P9_35B(PIN_INPUT, 7))
+	BONE_PIN(P9_35, pruout,    P9_35B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_35, pruin,     P9_35B(PIN_INPUT, 1))
+	BONE_PIN(P9_35, gpio,      P9_35B(PIN_INPUT, 7))
+	BONE_PIN(P9_35, gpio_pu,   P9_35B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_35, gpio_pd,   P9_35B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_36, default,   P9_36B(PIN_INPUT, 7))
+	BONE_PIN(P9_36, pruout,    P9_36B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_36, pruin,     P9_36B(PIN_INPUT, 1))
+	BONE_PIN(P9_36, gpio,      P9_36B(PIN_INPUT, 7))
+	BONE_PIN(P9_36, gpio_pu,   P9_36B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_36, gpio_pd,   P9_36B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_37, default,   P9_37B(PIN_INPUT, 7))
+	BONE_PIN(P9_37, pruout,    P9_37B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_37, pruin,     P9_37B(PIN_INPUT, 1))
+	BONE_PIN(P9_37, gpio,      P9_37B(PIN_INPUT, 7))
+	BONE_PIN(P9_37, gpio_pu,   P9_37B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_37, gpio_pd,   P9_37B(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P9_37, uart,      P9_37B(PIN_INPUT, 8)) /* UART4_RX */
+
+	BONE_PIN(P9_38, default,   P9_38B(PIN_INPUT, 7))
+	BONE_PIN(P9_38, pruout,    P9_38B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_38, pruin,     P9_38B(PIN_INPUT, 1))
+	BONE_PIN(P9_38, gpio,      P9_38B(PIN_INPUT, 7))
+	BONE_PIN(P9_38, gpio_pu,   P9_38B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_38, gpio_pd,   P9_38B(PIN_INPUT_PULLDOWN, 7))
+	BONE_PIN(P9_38, uart,      P9_38B(PIN_OUTPUT, 8)) /* UART4_TX */
+
+	BONE_PIN(P9_39, default,   P9_39B(PIN_INPUT, 7))
+	BONE_PIN(P9_39, pruout,    P9_39B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_39, pruin,     P9_39B(PIN_INPUT, 1))
+	BONE_PIN(P9_39, gpio,      P9_39B(PIN_INPUT, 7))
+	BONE_PIN(P9_39, gpio_pu,   P9_39B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_39, gpio_pd,   P9_39B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_40, default,   P9_40B(PIN_INPUT, 7))
+	BONE_PIN(P9_40, pruout,    P9_40B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_40, pruin,     P9_40B(PIN_INPUT, 1))
+	BONE_PIN(P9_40, gpio,      P9_40B(PIN_INPUT, 7))
+	BONE_PIN(P9_40, gpio_pu,   P9_40B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_40, gpio_pd,   P9_40B(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_41, default,   P9_41(PIN_INPUT, 7))
+	BONE_PIN(P9_41, default,   P9_41(PIN_INPUT, 7))
+	BONE_PIN(P9_41, pruout,    P9_41(PIN_OUTPUT, 0))
+	BONE_PIN(P9_41, pruin,     P9_41(PIN_INPUT, 1))
+	BONE_PIN(P9_41, gpio,      P9_41(PIN_INPUT, 7))
+	BONE_PIN(P9_41, gpio_pu,   P9_41(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_41, gpio_pd,   P9_41(PIN_INPUT_PULLDOWN, 7))
+
+	BONE_PIN(P9_42, default,   P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT, 7))
+	BONE_PIN(P9_42, pruout,    P9_42A(PIN_INPUT, 7) P9_42B(PIN_OUTPUT, 0))
+	BONE_PIN(P9_42, pruin,     P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT, 1))
+	BONE_PIN(P9_42, qep,       P9_42A(PIN_INPUT, 5) P9_42B(PIN_INPUT, 7)) /* EQEP0_A */
+	BONE_PIN(P9_42, gpio,      P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT, 7))
+	BONE_PIN(P9_42, gpio_pu,   P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT_PULLUP, 7))
+	BONE_PIN(P9_42, gpio_pd,   P9_42A(PIN_INPUT, 7) P9_42B(PIN_INPUT_PULLDOWN, 7))
+
+	/* P9_43 - GND */
+	/* P9_44 - GND */
+	/* P9_45 - GND */
+	/* P9_46 - GND */
+
+	pcie1_rst_pins_default: pcie1-rst-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x5c, PIN_INPUT, 7) /* (AG23) PRG1_PRU1_GPO1.GPIO0_22 */
+		>;
+	};
+
+	ehrpwm0_pins_default: ehrpwm0_pins_default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x164, PIN_OUTPUT, 6) /* (V29) RGMII5_TD2.EHRPWM0_A */
+			J721E_IOPAD(0x168, PIN_OUTPUT, 6) /* (V27) RGMII5_TD1.EHRPWM0_B */
+		>;
+	};
+
+	ehrpwm1_pins_default: ehrpwm1_pins_default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x16c, PIN_OUTPUT, 6) /* (U28) RGMII5_TD0.EHRPWM1_A */
+			J721E_IOPAD(0x170, PIN_OUTPUT, 6) /* (U29) RGMII5_TXC.EHRPWM1_B */
+		>;
+	};
+
+	ehrpwm2_pins_default: ehrpwm2_pins_default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x178, PIN_OUTPUT, 6) /* (U27) RGMII5_RD3.EHRPWM2_A */
+			J721E_IOPAD(0x17c, PIN_OUTPUT, 6) /* (U24) RGMII5_RD2.EHRPWM2_B */
+		>;
+	};
+
+	ehrpwm3_pins_default: ehrpwm3_pins_default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x18c, PIN_OUTPUT, 6) /* (V23) RGMII6_RX_CTL.EHRPWM3_A */
+			J721E_IOPAD(0x190, PIN_OUTPUT, 6) /* (W23) RGMII6_TD3.EHRPWM3_B */
+		>;
+	};
+
+	ehrpwm4_pins_default: ehrpwm4_pins_default {
+		pinctrl-single,pins = <
+/*			J721E_IOPAD(0x1a0, PIN_OUTPUT, 6)*/ /* (W29) RGMII6_TXC.EHRPWM4_A */
+			J721E_IOPAD(0x1a4, PIN_OUTPUT, 6) /* (W26) RGMII6_RXC.EHRPWM4_B */
+		>;
+	};
+
+	ehrpwm5_pins_default: ehrpwm5_pins_default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0x1ac, PIN_OUTPUT, 6) /* (Y27) RGMII6_RD2.EHRPWM5_A */
+/*			J721E_IOPAD(0x1b0, PIN_OUTPUT, 6)*/ /* (W24) RGMII6_RD1.EHRPWM5_B */
+		>;
+	};
+};
+
+&wkup_pmx0 {
+	wkup_i2c0_pins_default: wkup-i2c0-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0xf8, PIN_INPUT_PULLUP, 0) /* (J25) WKUP_I2C0_SCL */
+			J721E_WKUP_IOPAD(0xfc, PIN_INPUT_PULLUP, 0) /* (H24) WKUP_I2C0_SDA */
+		>;
+	};
+
+	eeprom_wp_pins_default: eeprom-wp-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0xc4, PIN_OUTPUT_PULLUP, 7) /* (G24) WKUP_GPIO0_5 */
+		>;
+	};
+
+	mcu_adc0_pins_default: mcu_adc0_pins_default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0x130, PIN_INPUT, 0) /* (K25) MCU_ADC0_AIN0 */
+			J721E_WKUP_IOPAD(0x134, PIN_INPUT, 0) /* (K26) MCU_ADC0_AIN1 */
+			J721E_WKUP_IOPAD(0x138, PIN_INPUT, 0) /* (K28) MCU_ADC0_AIN2 */
+			J721E_WKUP_IOPAD(0x13c, PIN_INPUT, 0) /* (L28) MCU_ADC0_AIN3 */
+			J721E_WKUP_IOPAD(0x140, PIN_INPUT, 0) /* (K24) MCU_ADC0_AIN4 */
+			J721E_WKUP_IOPAD(0x144, PIN_INPUT, 0) /* (K27) MCU_ADC0_AIN5 */ /* TODO: disable? */
+			J721E_WKUP_IOPAD(0x148, PIN_INPUT, 0) /* (K29) MCU_ADC0_AIN6 */
+		>;
+	};
+
+	mcu_adc1_pins_default: mcu_adc1_pins_default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0x150, PIN_INPUT, 0) /* (N23) MCU_ADC1_AIN0 */
+		>;
+	};
+
+	mikro_bus_pins_default: mikro-bus-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0x108, PIN_INPUT, 7) /* SDAPULLEN (E26) PMIC_POWER_EN0.WKUP_GPIO0_66 */
+			J721E_WKUP_IOPAD(0xd4, PIN_INPUT, 7) /* SDA (G26) WKUP_GPIO0_9.MCU_I2C1_SDA */
+			J721E_WKUP_IOPAD(0xf4, PIN_INPUT, 7) /* SDA (D25) MCU_I3C0_SDA.WKUP_GPIO0_61 */
+			J721E_WKUP_IOPAD(0xd0, PIN_INPUT, 7) /* SCL (G27) WKUP_GPIO0_8.MCU_I2C1_SCL */
+			J721E_WKUP_IOPAD(0xf0, PIN_INPUT, 7) /* SCL (D26) MCU_I3C0_SCL.WKUP_GPIO0_60 */
+
+			J721E_WKUP_IOPAD(0xb8, PIN_INPUT, 7) /* MOSI (F28) WKUP_GPIO0_2.MCU_SPI1_D1 */
+			J721E_WKUP_IOPAD(0xb4, PIN_INPUT, 7) /* MISO (F25) WKUP_GPIO0_1.MCU_SPI1_D0 */
+			J721E_WKUP_IOPAD(0xb0, PIN_INPUT, 7) /* CLK (F26) WKUP_GPIO0_0.MCU_SPI1_CLK */
+			J721E_WKUP_IOPAD(0xbc, PIN_INPUT, 7) /* CS (F27) WKUP_GPIO0_3.MCU_SPI1_CS0 */
+
+			J721E_WKUP_IOPAD(0x44, PIN_INPUT, 7) /* RX (G22) MCU_OSPI1_D1.WKUP_GPIO0_33 */
+			J721E_WKUP_IOPAD(0x48, PIN_INPUT, 7) /* TX (D23) MCU_OSPI1_D2.WKUP_GPIO0_34 */
+
+			J721E_WKUP_IOPAD(0x4c, PIN_INPUT, 7) /* INT (C23) MCU_OSPI1_D3.WKUP_GPIO0_35 */
+			J721E_WKUP_IOPAD(0x54, PIN_INPUT, 7) /* RST (E22) MCU_OSPI1_CSn1.WKUP_GPIO0_37 */
+			J721E_WKUP_IOPAD(0xdc, PIN_INPUT, 7) /* PWM (H27) WKUP_GPIO0_11 */
+			J721E_WKUP_IOPAD(0xac, PIN_INPUT, 7) /* AN (C29) MCU_MCAN0_RX.WKUP_GPIO0_59 */
+		>;
+	};
+
+	sw_pwr_pins_default: sw-pwr-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0xc0, PIN_INPUT, 7) /* (G25) WKUP_GPIO0_4 */
+		>;
+	};
+
+	mcu_cpsw_pins_default: mcu-cpsw-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0x84, PIN_INPUT, 0) /* (B24) MCU_RGMII1_RD0 */
+			J721E_WKUP_IOPAD(0x80, PIN_INPUT, 0) /* (A24) MCU_RGMII1_RD1 */
+			J721E_WKUP_IOPAD(0x7c, PIN_INPUT, 0) /* (D24) MCU_RGMII1_RD2 */
+			J721E_WKUP_IOPAD(0x78, PIN_INPUT, 0) /* (A25) MCU_RGMII1_RD3 */
+			J721E_WKUP_IOPAD(0x74, PIN_INPUT, 0) /* (C24) MCU_RGMII1_RXC */
+			J721E_WKUP_IOPAD(0x5c, PIN_INPUT, 0) /* (C25) MCU_RGMII1_RX_CTL */
+			J721E_WKUP_IOPAD(0x6c, PIN_OUTPUT, 0) /* (B25) MCU_RGMII1_TD0 */
+			J721E_WKUP_IOPAD(0x68, PIN_OUTPUT, 0) /* (A26) MCU_RGMII1_TD1 */
+			J721E_WKUP_IOPAD(0x64, PIN_OUTPUT, 0) /* (A27) MCU_RGMII1_TD2 */
+			J721E_WKUP_IOPAD(0x60, PIN_OUTPUT, 0) /* (A28) MCU_RGMII1_TD3 */
+			J721E_WKUP_IOPAD(0x70, PIN_OUTPUT, 0) /* (B26) MCU_RGMII1_TXC */
+			J721E_WKUP_IOPAD(0x58, PIN_OUTPUT, 0) /* (B27) MCU_RGMII1_TX_CTL */
+		>;
+	};
+
+	mcu_mdio_pins_default: mcu-mdio1-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0x8c, PIN_OUTPUT, 0) /* (F23) MCU_MDIO0_MDC */
+			J721E_WKUP_IOPAD(0x88, PIN_INPUT, 0) /* (E23) MCU_MDIO0_MDIO */
+		>;
+	};
+
+	mcu_usbss1_pins_default: mcu-usbss1-pins-default {
+		pinctrl-single,pins = <
+			J721E_WKUP_IOPAD(0x3c, PIN_OUTPUT_PULLUP, 5) /* (A23) MCU_OSPI1_LBCLKO.WKUP_GPIO0_30 */
+		>;
+	};
+};
+
+&wkup_uart0 {
+	/* Wakeup UART is used by System firmware */
+	status = "reserved";
+};
+
+bone_uart_0: &main_uart0 {
+	/* TODO: also has option as "bone/uart/4" */
+	symlink = "bone/uart/0";
+	power-domains = <&k3_pds 146 TI_SCI_PD_SHARED>;
+};
+
+&main_uart3 {
+	/* UART not brought out */
+	status = "disabled";
+};
+
+bone_uart_5: &main_uart5 {
+	symlink = "bone/uart/5";
+	status = "disabled";
+};
+
+&main_uart6 {
+	/* UART not brought out */
+	status = "disabled";
+};
+
+&main_uart7 {
+	/* UART not brought out */
+	status = "disabled";
+};
+
+&main_uart8 {
+	/* UART not brought out */
+	status = "disabled";
+};
+
+&main_uart9 {
+	/* UART not brought out */
+	status = "disabled";
+};
+
+&main_gpio0 {
+	status = "okay";
+	gpio-line-names = "", "P9_11", "P9_13", "P8_17", "P8_18", /* 0-4 */
+		"P8_22", "P8_24", "P8_34", "P8_36", "P8_38A", /* 5-9 */
+		"P9_23", "P8_37B", "P9_26B", "P9_24B", "P8_08", /* 10-14 */
+		"P8_07", "P8_10", "P8_09", "P9_42B", "", /* 15-19 */
+		"P8_03", "TYPEC_PWR_ST", "M2_RSTz", "M2_I2C_ALERT#", "P8_35A", /* 20-24 */
+		"P8_33A", "P8_32A", "", "P9_17A", "", /* 25-29 */
+		"P8_21", "P8_23", "P8_31A", "P8_05", "P8_06", /* 30-34 */
+		"P8_25", "M2_W_DISABLE1#", "M2_W_DISABLE2#", "P9_22A (BOOTMODE1)", "P9_21A", /* 35-39 */
+		"P9_18A", "DSI_I2C_SCL", "DSI_I2C_SDA", "P9_28B", "P9_30B", /* 40-44 */
+		"P9_12", "P9_27A", "P9_15", "P8_04 (BOOTMODE2)", "VCC_DP_EN", /* 45-49 */
+		"P9_33B", "P8_26", "P9_31B", "P9_29B", "P9_39B", /* 50-54 */
+		"P9_35B", "P9_36B", "P9_37B", "P9_38B", "P8_12", /* 55-59 */
+		"P8_11 (BOOTMODE7)", "P8_15", "P8_16", "", "", /* 60-64 */
+		"P8_43", "P8_44", "P8_41", "P8_42 (BOOTMODE6)", "P8_39", /* 65-69 */
+		"P8_40", "P8_27", "P8_28", "P8_29", "P8_30", /* 70-74 */
+		"P8_14", "P8_20", "P9_20B", "P9_19B", "P8_45", /* 75-79 */
+		"P8_46 (BOOTMODE3)", "P9_40B", "VDD_SD_EN", "CSI_I2C_SCL", "CSI_I2C_SDA", /* 80-84 */
+		"M2_I2S_SCK", "M2_I2S_WS", "M2_I2S_IN", "P8_19", "P8_13", /* 85-89 */
+		"P9_21B", "P9_22B", "M2_I2S_OUT", "P9_14", "P9_16", /* 90-94 */
+		"USR1", "USR0", "USR2", "DSI_GPIO1", "FAN_PWM", /* 95-99 */
+		"FAN_TACH", "CSI1_GPIO1", "CSI0_GPIO2", "CSI0_GPIO1", "P9_25B", /* 100-104 */
+		"P8_38B", "P8_37A", "CSI1_GPIO2", "DSI_GPIO2", "USR4", /* 105-109 */
+		"USR3", "P8_33B", "DP_HPD", "M2_UART_CTSn", "M2_UART_RTSn", /* 110-114 */
+		"P9_17B", "P8_35B", "VDD_SD_SEL", "P9_26A", "P9_24A", /* 115-119 */
+		"P9_18B", "CONSOLE_RX", "CONSOLE_TX", "P9_42A", "P9_27B", /* 120-124 */
+		"M2_UART_RX", "M2_UART_TX", "P9_25A"; /* 125-127 */
+};
+
+&main_gpio1 {
+	status = "okay";
+	gpio-line-names = "P9_41", "P9_19A", "P9_20A", "TYPEC_DIR", "TYPEC_INT", /* 0-4 */
+		"M2_PCIE_WAKE#", "M2_PCIE_CLKREQ#", "M2_I2C_SCL", "M2_I2C_SDA", "TYPEC/CSI1_I2C_SCL", /* 5-9 */
+		"TYPEC/CSI1_I2C_SDA", "P9_28A", "P9_31A", "P9_30A", "P9_29A", /* 10-14 */
+		"uSD_DAT3", "uSD_DAT2", "uSD_DAT1", "uSD_DAT0", "uSD_CLK", /* 15-19 */
+		"uSD_CMD", "uSD_SDCD", "", "M2_SDIO_DAT3", "M2_SDIO_DAT2", /* 20-24 */
+		"M2_SDIO_DAT1", "M2_SDIO_DAT0", "M2_SDIO_CLK", "M2_SDIO_CMD", "USB1_DRVVBUS", /* 25-29 */
+		"", "", "", "", "", /* 30-34 */
+		"", ""; /* 35-36 */
+};
+
+&main_gpio2 {
+	status = "disabled";
+};
+
+&main_gpio3 {
+	status = "disabled";
+};
+
+&main_gpio4 {
+	status = "disabled";
+};
+
+&main_gpio5 {
+	status = "disabled";
+};
+
+&main_gpio6 {
+	status = "disabled";
+};
+
+&main_gpio7 {
+	status = "disabled";
+};
+
+&wkup_gpio0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&mcu_adc0_pins_default &mcu_adc1_pins_default &mikro_bus_pins_default>;
+	gpio-line-names = "MB_CLK/BOOT_BTN", "MB_MISO", "MB_MOSI", "MB_CS", "SOC_WAKE", /* 0-4 */
+		"EEPROM_WP", "SOC_INT2z", "H_MCU_INT#", "MB_SCLA", "MB_SDAA", /* 5-9 */
+		"MCU_RGMII_RST#", "MB_PWM", "MCU_BOOTMODE8", "MCU_BOOTMODE9", "MCU_BOOTMODE6", /* 10-14 */
+		"MCU_BOOTMODE7", "", "", "", "", /* 15-19 */
+		"", "", "", "", "", /* 20-24 */
+		"", "", "", "", "", /* 24-29 */
+		"USB_HUB_RST", "", "", "MB_RX", "MB_TX", /* 30-34 */
+		"MB_INT", "", "MB_RST", "MII_TX_CTL", "MII_RX_CTL", /* 35-39 */
+		"MII_TD3", "MII_TD2", "MII_TD1", "MII_TD0", "MII_TXC", /* 40-44 */
+		"MII_RXC", "MII_RD3", "MII_RD2", "MII_RD1", "MII_RD0", /* 45-49 */
+		"MDIO", "MDC", "MCU_BOOTMODE0", "MCU_BOOTMODE1", "MCU_BOOTMODE2", /* 50-54 */
+		"SYS_MCU_PWRDN", "WKUP_UART_RX", "WKUP_UART_TX", "MII_RST#", "MB_AN", /* 55-59 */
+		"MB_SCLB", "MB_SDAB", "WKUP_I2C0_SCL", "WKUP_I2C0_SDA", "MCU_I2C0_SCL", /* 60-64 */
+		"MCU_I2C0_SDA", "MB_SDAPULLEN", "PMIC_POWER_EN1"; /* 65-67 */
+};
+
+&wkup_gpio1 {
+	status = "disabled";
+};
+
+&main_sdhci0 {
+	/* eMMC */
+	non-removable;
+	ti,driver-strength-ohm = <50>;
+	disable-wp;
+};
+
+&main_sdhci1 {
+	/* SD/MMC */
+	vmmc-supply = <&vdd_mmc1>;
+	vqmmc-supply = <&vdd_sd_dv_alt>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_mmc1_pins_default>;
+	ti,driver-strength-ohm = <50>;
+	disable-wp;
+};
+
+&main_sdhci2 {
+	/* Unused */
+	status = "disabled";
+};
+
+&usb_serdes_mux {
+	idle-states = <1>, <1>; /* USB0 to SERDES3, USB1 to SERDES2 */
+};
+
+&serdes_ln_ctrl {
+	idle-states = <J721E_SERDES0_LANE0_IP4_UNUSED>, <J721E_SERDES0_LANE1_IP4_UNUSED>, /* TODO: is this right? */
+		      <J721E_SERDES1_LANE0_PCIE1_LANE0>, <J721E_SERDES1_LANE1_PCIE1_LANE1>,
+		      <J721E_SERDES2_LANE0_IP1_UNUSED>, <J721E_SERDES2_LANE1_USB3_1>, /* TODO: USB3_0 or USB3_1? */
+		      <J721E_SERDES3_LANE0_USB3_0_SWAP>, <J721E_SERDES3_LANE1_USB3_0>,
+		      <J721E_SERDES4_LANE0_EDP_LANE0>, <J721E_SERDES4_LANE1_EDP_LANE1>,
+		      <J721E_SERDES4_LANE2_EDP_LANE2>, <J721E_SERDES4_LANE3_EDP_LANE3>;
+};
+
+&serdes_wiz3 {
+	typec-dir-gpios = <&main_gpio1 3 GPIO_ACTIVE_LOW>;
+	typec-dir-debounce-ms = <700>;	/* TUSB321, tCCB_DEFAULT 133 ms */
+};
+
+&serdes3 {
+	serdes3_usb_link: phy@0 {
+		reg = <0>;
+		cdns,num-lanes = <2>;
+		#phy-cells = <0>;
+		cdns,phy-type = <PHY_TYPE_USB3>;
+		resets = <&serdes_wiz3 1>, <&serdes_wiz3 2>;
+	};
+};
+
+&usbss0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_usbss0_pins_default>;
+	ti,vbus-divider;
+};
+
+&usb0 {
+	dr_mode = "peripheral";
+	maximum-speed = "super-speed";
+	phys = <&serdes3_usb_link>;
+	phy-names = "cdns3,usb3-phy";
+};
+
+&serdes2 {
+	serdes2_usb_link: phy@1 {
+		reg = <1>;
+		cdns,num-lanes = <1>;
+		#phy-cells = <0>;
+		cdns,phy-type = <PHY_TYPE_USB3>;
+		resets = <&serdes_wiz2 2>;
+	};
+};
+
+&usbss1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_usbss1_pins_default &mcu_usbss1_pins_default>;
+	ti,vbus-divider;
+};
+
+&usb1 {
+	dr_mode = "host";
+	maximum-speed = "super-speed";
+	phys = <&serdes2_usb_link>;
+	phy-names = "cdns3,usb3-phy";
+};
+
+&tscadc0 {
+	adc {
+		ti,adc-channels = <0 1 2 3 4 5 6 7>;
+	};
+};
+
+&tscadc1 {
+	adc {
+		ti,adc-channels = <0 1 2 3 4 5 6 7>;
+	};
+};
+
+bone_i2c_0: &wkup_i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&wkup_i2c0_pins_default &eeprom_wp_pins_default>;
+	clock-frequency = <400000>;
+
+	eeprom@50 {
+		compatible = "atmel,24c04";
+		reg = <0x50>;
+	};
+};
+
+&main_i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c0_pins_default>;
+	clock-frequency = <400000>;
+};
+
+&main_i2c1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c1_pins_default &csi1_gpio_pins_default>;
+	clock-frequency = <400000>;
+
+#if 1
+	ov5640_1: camera1@3c {
+		compatible = "ovti,ov5640";
+		reg = <0x3c>;
+
+		clocks = <&clk_ov5640_fixed>;
+		clock-names = "xclk";
+		powerdown-gpios = <&main_gpio0 101 GPIO_ACTIVE_LOW>;
+		reset-gpios = <&main_gpio0 107 GPIO_ACTIVE_LOW>;
+
+		port {
+			csi2rx1_cam0: endpoint {
+				remote-endpoint = <&csi2rx1_in_sensor>;
+				clock-lanes = <0>;
+				data-lanes = <1 2>;
+			};
+		};
+	};
+#else
+	ov5647_1: camera1@36 {
+		compatible = "ovti,ov5647";
+		reg = <0x36>;
+
+		clocks = <&clk_ov5640_fixed>;
+		clock-names = "xclk";
+		powerdown-gpios = <&main_gpio0 101 GPIO_ACTIVE_LOW>;
+		reset-gpios = <&main_gpio0 107 GPIO_ACTIVE_LOW>;
+
+		port {
+			csi2rx1_cam0: endpoint {
+				remote-endpoint = <&csi2rx1_in_sensor>;
+				clock-lanes = <0>;
+				data-lanes = <1 2>;
+			};
+		};
+	};
+#endif
+
+	tusb322@47 {
+		compatible = "ti,tusb322";
+		reg = <0x47>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&tusb322_pins_default>;
+		interrupt-parent = <&main_gpio1>;
+		interrupts = <4 IRQ_TYPE_EDGE_FALLING>;
+		interrupt-controller;
+		#interrupt-cells = <2>;
+	};
+};
+
+bone_i2c_2: &main_i2c3 {
+	symlink = "bone/i2c/2";
+};
+
+&main_i2c3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c3_pins_default>;
+	clock-frequency = <400000>;
+};
+
+bone_i2c_3: &main_i2c4 {
+	pinctrl-names = "default";
+	clock-frequency = <400000>;
+	symlink = "bone/i2c/3";
+};
+
+&main_i2c5 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c5_pins_default &csi0_gpio_pins_default>;
+	clock-frequency = <400000>;
+
+#if 1
+	ov5640: camera@3c {
+		compatible = "ovti,ov5640";
+		reg = <0x3c>;
+
+		clocks = <&clk_ov5640_fixed>;
+		clock-names = "xclk";
+		powerdown-gpios = <&main_gpio0 103 GPIO_ACTIVE_LOW>;
+		reset-gpios = <&main_gpio0 102 GPIO_ACTIVE_LOW>;
+
+		port {
+			csi2rx0_cam0: endpoint {
+				remote-endpoint = <&csi2rx0_in_sensor>;
+				clock-lanes = <0>;
+				data-lanes = <1 2>;
+			};
+		};
+	};
+#else
+	ov5647: camera1@36 {
+		compatible = "ovti,ov5647";
+		reg = <0x36>;
+
+		clocks = <&clk_ov5640_fixed>;
+		clock-names = "xclk";
+		powerdown-gpios = <&main_gpio0 101 GPIO_ACTIVE_LOW>;
+		reset-gpios = <&main_gpio0 107 GPIO_ACTIVE_LOW>;
+
+		port {
+			csi2rx0_cam0: endpoint {
+				remote-endpoint = <&csi2rx0_in_sensor>;
+				clock-lanes = <0>;
+				data-lanes = <1 2>;
+			};
+		};
+	};
+#endif
+};
+
+bone_spi_0: &main_spi6 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_spi6_pins_default>;
+	ti,spi-num-cs = <2>;
+	ti,pindir-d0-out-d1-in;
+
+	spidev0: spidev@0{
+		symlink = "bone/spi/0.0";
+		compatible = "spidev";
+		reg = <0>;	/* CE0 */
+		#address-cells = <1>;
+		#size-cells = <0>;
+		spi-max-frequency = <125000000>;
+	};
+
+	spidev1: spidev@1{
+		symlink = "bone/spi/0.1";
+		compatible = "spidev";
+		reg = <1>;	/* CE1 */
+		#address-cells = <1>;
+		#size-cells = <0>;
+		spi-max-frequency = <125000000>;
+	};
+};
+
+bone_i2c_1: &main_i2c6 {
+	symlink = "bone/i2c/1";
+};
+
+&mcu_cpsw {
+	pinctrl-names = "default";
+	pinctrl-0 = <&mcu_cpsw_pins_default &mcu_mdio_pins_default>;
+};
+
+&davinci_mdio {
+	phy0: ethernet-phy@0 {
+		reg = <0>;
+		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
+		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
+	};
+};
+
+&cpsw_port1 {
+	phy-mode = "rgmii-rxid";
+	phy-handle = <&phy0>;
+};
+
+&dss {
+	/*
+	 * These clock assignments are chosen to enable the following outputs:
+	 *
+	 * VP0 - DisplayPort SST
+	 * VP1 - DPI0
+	 * VP2 - DSI
+	 * VP3 - DPI1
+	 */
+
+	assigned-clocks = <&k3_clks 152 1>,
+			  <&k3_clks 152 4>,
+			  <&k3_clks 152 9>,
+			  <&k3_clks 152 13>;
+	assigned-clock-parents = <&k3_clks 152 2>,	/* PLL16_HSDIV0 */
+				 <&k3_clks 152 6>,	/* PLL19_HSDIV0 */
+				 <&k3_clks 152 11>,	/* PLL18_HSDIV0 */
+				 <&k3_clks 152 18>;	/* PLL23_HSDIV0 */
+};
+
+&dss_ports {
+	port@0 {
+		reg = <0>;
+
+		dpi0_out: endpoint {
+			remote-endpoint = <&dp0_in>;
+		};
+	};
+};
+
+&mhdp {
+	pinctrl-names = "default";
+	pinctrl-0 = <&dp0_pins_default>;
+};
+
+&dp0_ports {
+	#address-cells = <1>;
+	#size-cells = <0>;
+
+	port@0 {
+		reg = <0>;
+		dp0_in: endpoint {
+			remote-endpoint = <&dpi0_out>;
+		};
+	};
+
+	port@4 {
+		reg = <4>;
+		dp0_out: endpoint {
+			remote-endpoint = <&dp_connector_in>;
+		};
+	};
+};
+
+&mcasp0 {
+	status = "disabled";
+};
+
+&mcasp1 {
+	status = "disabled";
+};
+
+&mcasp2 {
+	status = "disabled";
+};
+
+&mcasp3 {
+	status = "disabled";
+};
+
+&mcasp4 {
+	status = "disabled";
+};
+
+&mcasp5 {
+	status = "disabled";
+};
+
+&mcasp6 {
+	status = "disabled";
+};
+
+&mcasp7 {
+	status = "disabled";
+};
+
+&mcasp8 {
+	status = "disabled";
+};
+
+&mcasp9 {
+	status = "disabled";
+};
+
+&mcasp10 {
+	status = "disabled";
+};
+
+&mcasp11 {
+	status = "disabled";
+};
+
+&serdes0 {
+	serdes0_pcie_link: phy@0 {
+		reg = <0>;
+		cdns,num-lanes = <1>;
+		#phy-cells = <0>;
+		cdns,phy-type = <PHY_TYPE_PCIE>;
+		resets = <&serdes_wiz0 1>;
+	};
+};
+
+&serdes1 {
+	serdes1_pcie_link: phy@0 {
+		reg = <0>;
+		cdns,num-lanes = <2>;
+		#phy-cells = <0>;
+		cdns,phy-type = <PHY_TYPE_PCIE>;
+		resets = <&serdes_wiz1 1>, <&serdes_wiz1 2>;
+	};
+};
+
+&pcie0_rc {
+	status = "disabled";
+};
+
+&pcie1_rc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pcie1_rst_pins_default>;
+	phys = <&serdes1_pcie_link>;
+	phy-names = "pcie-phy";
+	num-lanes = <2>;
+	max-link-speed = <3>;
+	reset-gpios = <&main_gpio0 22 GPIO_ACTIVE_HIGH>;
+};
+
+&pcie2_rc {
+	status = "disabled";
+};
+
+&pcie0_ep {
+	phys = <&serdes0_pcie_link>;
+	phy-names = "pcie-phy";
+	num-lanes = <1>;
+	status = "disabled";
+};
+
+&pcie1_ep {
+	phys = <&serdes1_pcie_link>;
+	phy-names = "pcie-phy";
+	num-lanes = <2>;
+	status = "disabled";
+};
+
+&pcie2_ep {
+	status = "disabled";
+};
+
+&pcie3_rc {
+	status = "disabled";
+};
+
+&pcie3_ep {
+	status = "disabled";
+};
+
+/* TODO: is uart2 assigned to cpsw9g eth-switch fw running on remote CPU core? */
+/* TODO: handle alternate connection at P8_34 and P8_22 */
+bone_uart_1: &main_uart2 {
+	status = "okay";
+	symlink = "bone/uart/1";
+	power-domains = <&k3_pds 279 TI_SCI_PD_SHARED>; /* TODO: needed? */
+};
+
+&mcu_mcan0 {
+	status = "disabled";
+};
+
+&mcu_mcan1 {
+	status = "disabled";
+};
+
+&main_mcan0 {
+	status = "disabled";
+};
+
+&main_mcan1 {
+	status = "disabled";
+};
+
+&main_mcan2 {
+	status = "disabled";
+};
+
+&main_mcan3 {
+	status = "disabled";
+};
+
+&main_mcan4 {
+	status = "disabled";
+};
+
+&main_mcan5 {
+	status = "disabled";
+};
+
+&main_mcan6 {
+	status = "disabled";
+};
+
+&main_mcan7 {
+	status = "disabled";
+};
+
+&main_mcan8 {
+	status = "disabled";
+};
+
+&main_mcan9 {
+	status = "disabled";
+};
+
+&main_mcan10 {
+	status = "disabled";
+};
+
+&main_mcan11 {
+	status = "disabled";
+};
+
+&main_mcan12 {
+	status = "disabled";
+};
+
+&main_mcan13 {
+	status = "disabled";
+};
+
+&ufs_wrapper {
+	status = "disabled";
+};
+
+&csi0_port0 {
+	csi2rx0_in_sensor: endpoint {
+		remote-endpoint = <&csi2rx0_cam0>;
+		bus-type = <4>; /* CSI2 DPHY. */
+		clock-lanes = <0>;
+		data-lanes = <1 2>;
+	};
+};
+
+&csi0_port1 {
+	status = "disabled";
+};
+
+&csi0_port2 {
+	status = "disabled";
+};
+
+&csi0_port3 {
+	status = "disabled";
+};
+
+&csi0_port4 {
+	status = "disabled";
+};
+
+&csi1_port0 {
+	csi2rx1_in_sensor: endpoint {
+		remote-endpoint = <&csi2rx1_cam0>;
+		bus-type = <4>; /* CSI2 DPHY. */
+		clock-lanes = <0>;
+		data-lanes = <1 2>;
+	};
+};
+
+&csi1_port1 {
+	status = "disabled";
+};
+
+&csi1_port2 {
+	status = "disabled";
+};
+
+&csi1_port3 {
+	status = "disabled";
+};
+
+&csi1_port4 {
+	status = "disabled";
+};
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-common-proc-board.dts b/arch/arm64/boot/dts/ti/k3-j721e-common-proc-board.dts
index 56d987db4bfc..eb365599253f 100644
--- a/arch/arm64/boot/dts/ti/k3-j721e-common-proc-board.dts
+++ b/arch/arm64/boot/dts/ti/k3-j721e-common-proc-board.dts
@@ -12,7 +12,7 @@
 #include <dt-bindings/phy/phy-cadence.h>
 
 / {
-	chosen {
+	chosen: chosen {
 		stdout-path = "serial2:115200n8";
 		bootargs = "console=ttyS2,115200n8 earlycon=ns16550a,mmio32,0x02800000";
 	};
@@ -220,6 +220,12 @@ dp_connector_in: endpoint {
 			};
 		};
 	};
+
+	clk_ov5640_fixed: ov5640-xclk {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <25000000>;
+	};
 };
 
 &main_pmx0 {
@@ -815,6 +821,23 @@ exp5: gpio@20 {
 		gpio-controller;
 		#gpio-cells = <2>;
 	};
+
+	ov5640: camera@3c {
+		compatible = "ovti,ov5640";
+		reg = <0x3c>;
+
+		clocks = <&clk_ov5640_fixed>;
+		clock-names = "xclk";
+		reset-gpios = <&exp5 0 GPIO_ACTIVE_LOW>;
+
+		port {
+			csi2_cam0: endpoint {
+				remote-endpoint = <&csi2rx0_in_sensor>;
+				clock-lanes = <0>;
+				data-lanes = <1 2>;
+			};
+		};
+	};
 };
 
 &mcu_cpsw {
@@ -1165,7 +1188,12 @@ &main_mcan13 {
 };
 
 &csi0_port0 {
-	status = "disabled";
+	csi2rx0_in_sensor: endpoint {
+		remote-endpoint = <&csi2_cam0>;
+		bus-type = <4>; /* CSI2 DPHY. */
+		clock-lanes = <0>;
+		data-lanes = <1 2>;
+	};
 };
 
 &csi0_port1 {
@@ -1183,27 +1211,3 @@ &csi0_port3 {
 &csi0_port4 {
 	status = "disabled";
 };
-
-&main_ehrpwm0 {
-	status = "disabled";
-};
-
-&main_ehrpwm1 {
-	status = "disabled";
-};
-
-&main_ehrpwm2 {
-	status = "disabled";
-};
-
-&main_ehrpwm3 {
-	status = "disabled";
-};
-
-&main_ehrpwm4 {
-	status = "disabled";
-};
-
-&main_ehrpwm5 {
-	status = "disabled";
-};
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-edgeai-apps.dts b/arch/arm64/boot/dts/ti/k3-j721e-edgeai-apps.dts
index 5defaca9ccf1..c9c7d3813fff 100644
--- a/arch/arm64/boot/dts/ti/k3-j721e-edgeai-apps.dts
+++ b/arch/arm64/boot/dts/ti/k3-j721e-edgeai-apps.dts
@@ -5,5 +5,5 @@
  * Copyright (C) 2019 - 2021 Texas Instruments Incorporated - http://www.ti.com/
  */
 
-#include "k3-j721e-rtos-memory-map.dtsi"
+#include "k3-j721e-rtos-memory-map-old.dtsi"
 
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-main.dtsi b/arch/arm64/boot/dts/ti/k3-j721e-main.dtsi
index 947e0d718c4b..6e9f5763ea96 100644
--- a/arch/arm64/boot/dts/ti/k3-j721e-main.dtsi
+++ b/arch/arm64/boot/dts/ti/k3-j721e-main.dtsi
@@ -74,7 +74,7 @@ ehrpwm_tbclk: clock@4140 {
 		};
 	};
 
-	main_ehrpwm0: pwm@3000000 {
+	ehrpwm0: pwm@3000000 {
 		compatible = "ti,am654-ehrpwm", "ti,am3352-ehrpwm";
 		#pwm-cells = <3>;
 		reg = <0x0 0x3000000 0x0 0x100>;
@@ -83,7 +83,7 @@ main_ehrpwm0: pwm@3000000 {
 		clock-names = "tbclk", "fck";
 	};
 
-	main_ehrpwm1: pwm@3010000 {
+	ehrpwm1: pwm@3010000 {
 		compatible = "ti,am654-ehrpwm", "ti,am3352-ehrpwm";
 		#pwm-cells = <3>;
 		reg = <0x0 0x3010000 0x0 0x100>;
@@ -92,7 +92,7 @@ main_ehrpwm1: pwm@3010000 {
 		clock-names = "tbclk", "fck";
 	};
 
-	main_ehrpwm2: pwm@3020000 {
+	ehrpwm2: pwm@3020000 {
 		compatible = "ti,am654-ehrpwm", "ti,am3352-ehrpwm";
 		#pwm-cells = <3>;
 		reg = <0x0 0x3020000 0x0 0x100>;
@@ -101,7 +101,7 @@ main_ehrpwm2: pwm@3020000 {
 		clock-names = "tbclk", "fck";
 	};
 
-	main_ehrpwm3: pwm@3030000 {
+	ehrpwm3: pwm@3030000 {
 		compatible = "ti,am654-ehrpwm", "ti,am3352-ehrpwm";
 		#pwm-cells = <3>;
 		reg = <0x0 0x3030000 0x0 0x100>;
@@ -110,7 +110,7 @@ main_ehrpwm3: pwm@3030000 {
 		clock-names = "tbclk", "fck";
 	};
 
-	main_ehrpwm4: pwm@3040000 {
+	ehrpwm4: pwm@3040000 {
 		compatible = "ti,am654-ehrpwm", "ti,am3352-ehrpwm";
 		#pwm-cells = <3>;
 		reg = <0x0 0x3040000 0x0 0x100>;
@@ -119,7 +119,7 @@ main_ehrpwm4: pwm@3040000 {
 		clock-names = "tbclk", "fck";
 	};
 
-	main_ehrpwm5: pwm@3050000 {
+	ehrpwm5: pwm@3050000 {
 		compatible = "ti,am654-ehrpwm", "ti,am3352-ehrpwm";
 		#pwm-cells = <3>;
 		reg = <0x0 0x3050000 0x0 0x100>;
@@ -1440,13 +1440,24 @@ main_i2c6: i2c@2060000 {
 		power-domains = <&k3_pds 193 TI_SCI_PD_EXCLUSIVE>;
 	};
 
+	main_spi6: spi@2160000 {
+		compatible = "ti,omap4-mcspi";
+		reg = <0x0 0x2160000 0x0 0x400>;
+		interrupts = <GIC_SPI 190 IRQ_TYPE_LEVEL_HIGH>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		clock-names = "fck";
+		clocks = <&k3_clks 272 1>;
+		power-domains = <&k3_pds 272 TI_SCI_PD_EXCLUSIVE>;
+	};
+
 	d5520: video-decoder@4300000 {
-	       /* IMG D5520 driver configuration */
-	       compatible = "img,d5500-vxd";
-	       reg = <0x00 0x04300000>,
-		   <0x00 0x100000>;
-	       power-domains = <&k3_pds 144 TI_SCI_PD_EXCLUSIVE>;
-	       interrupts = <GIC_SPI 180 IRQ_TYPE_LEVEL_HIGH>;
+		/* IMG D5520 driver configuration */
+		compatible = "img,d5500-vxd";
+		reg = <0x00 0x04300000>,
+		      <0x00 0x100000>;
+		power-domains = <&k3_pds 144 TI_SCI_PD_EXCLUSIVE>;
+		interrupts = <GIC_SPI 180 IRQ_TYPE_LEVEL_HIGH>;
 	};
 
 	vxe384: video-encoder@4200000 {
@@ -1505,6 +1516,27 @@ dp0_ports: ports {
 		};
 	};
 
+	dsi0: dsi@48000000 {
+		compatible = "cdns,dsi";
+		reg = <0x0 0x04800000 0x0 0x100000>, <0x0 0x04710000 0x0 0x100>;
+		clocks = <&k3_clks 150 1>, <&k3_clks 150 5>;
+		clock-names = "dsi_p_clk", "dsi_sys_clk";
+		resets = <&k3_reset 150 1>;
+		reset-names = "dsi_p_rst";
+		power-domains = <&k3_pds 150 TI_SCI_PD_EXCLUSIVE>;
+		interrupt-parent = <&gic500>;
+		interrupts = <GIC_SPI 600 IRQ_TYPE_LEVEL_HIGH>;
+		phys = <&dphy2>;
+		phy-names = "dphy";
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		dsi0_ports: ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+		};
+	};
+
 	dss: dss@4a00000 {
 		compatible = "ti,j721e-dss";
 		reg =
@@ -2572,4 +2604,13 @@ dphy1: phy@4590000 {
 		#phy-cells = <0>;
 		power-domains = <&k3_pds 148 TI_SCI_PD_EXCLUSIVE>;
 	};
+
+	dphy2: phy@4480000 {
+		compatible = "cdns,dphy";
+		reg = <0x0 0x04480000 0x0 0x1100>;
+		clocks = <&k3_clks 296 1>, <&k3_clks 296 3>;
+		clock-names = "psm", "pll_ref";
+		#phy-cells = <0>;
+		power-domains = <&k3_pds 296 TI_SCI_PD_EXCLUSIVE>;
+	};
 };
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map-old.dtsi b/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map-old.dtsi
new file mode 100644
index 000000000000..4a7ed8c945cc
--- /dev/null
+++ b/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map-old.dtsi
@@ -0,0 +1,285 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Vision-apps: device-tree overlay
+ *
+ * Copyright (C) 2019 Texas Instruments Incorporated - http://www.ti.com/
+ */
+
+#include <dt-bindings/soc/ti,sci_pm_domain.h>
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	fragment@101 {
+		target-path = "/";
+
+		__overlay__ {
+
+			dma_buf_phys {
+				compatible = "ti,dma_buf_phys";
+			};
+		};
+	};
+};
+
+&mcu_r5fss0_core0_memory_region {
+	status = "disabled";
+};
+
+&mcu_r5fss0_core0_dma_memory_region {
+	status = "disabled";
+};
+
+&mcu_r5fss0_core1_dma_memory_region {
+	status = "disabled";
+};
+
+&mcu_r5fss0_core1_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss0_core0_dma_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss0_core0_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss0_core1_dma_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss0_core1_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss1_core0_dma_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss1_core0_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss1_core1_dma_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss1_core1_memory_region {
+	status = "disabled";
+};
+
+&c66_0_dma_memory_region {
+	status = "disabled";
+};
+
+&c66_0_memory_region {
+	status = "disabled";
+};
+
+&c66_1_dma_memory_region {
+	status = "disabled";
+};
+
+&c66_1_memory_region {
+	status = "disabled";
+};
+
+&c71_0_dma_memory_region {
+	status = "disabled";
+};
+
+&c71_0_memory_region {
+	status = "disabled";
+};
+
+&rtos_ipc_memory_region {
+	status = "disabled";
+};
+
+&main_r5fss0_core0_shared_memory_queue_region {
+	status = "disabled";
+};
+
+&main_r5fss0_core0_shared_memory_bufpool_region {
+	status = "disabled";
+};
+
+&reserved_memory {
+	#address-cells = <2>;
+	#size-cells = <2>;
+
+	vision_apps_mcu_r5fss0_core0_dma_memory_region: vision-apps-r5f-dma-memory@a0000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa0000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_mcu_r5fss0_core0_memory_region: vision-apps-r5f-memory@a0100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa0100000 0x00 0x00f00000>;
+		no-map;
+	};
+	vision_apps_mcu_r5fss0_core1_dma_memory_region: vision-apps-r5f-dma-memory@a1000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa1000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_mcu_r5fss0_core1_memory_region: vision-apps-r5f-memory@a1100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa1100000 0x00 0x00f00000>;
+		no-map;
+	};
+	vision_apps_main_r5fss0_core0_dma_memory_region: vision-apps-r5f-dma-memory@a2000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa2000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_main_r5fss0_core0_memory_region: vision-apps-r5f-memory@a2100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa2100000 0x00 0x01f00000>;
+		no-map;
+	};
+	vision_apps_main_r5fss0_core1_dma_memory_region: vision-apps-r5f-dma-memory@a4000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa4000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_main_r5fss0_core1_memory_region: vision-apps-r5f-memory@a4100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa4100000 0x00 0x01f00000>;
+		no-map;
+	};
+	vision_apps_main_r5fss1_core0_dma_memory_region: vision-apps-r5f-dma-memory@a6000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa6000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_main_r5fss1_core0_memory_region: vision-apps-r5f-memory@a6100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa6100000 0x00 0x00f00000>;
+		no-map;
+	};
+	vision_apps_main_r5fss1_core1_dma_memory_region: vision-apps-r5f-dma-memory@a7000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa7000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_main_r5fss1_core1_memory_region: vision-apps-r5f-memory@a7100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa7100000 0x00 0x00f00000>;
+		no-map;
+	};
+	vision_apps_c66_1_dma_memory_region: vision-apps-c66-dma-memory@a8000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa8000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_c66_0_memory_region: vision-apps-c66-memory@a8100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa8100000 0x00 0x00f00000>;
+		no-map;
+	};
+	vision_apps_c66_0_dma_memory_region: vision-apps-c66-dma-memory@a9000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa9000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_c66_1_memory_region: vision-apps-c66-memory@a9100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xa9100000 0x00 0x00f00000>;
+		no-map;
+	};
+	vision_apps_c71_0_dma_memory_region: vision-apps-c71-dma-memory@aa000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xaa000000 0x00 0x00100000>;
+		no-map;
+	};
+	vision_apps_c71_0_memory_region: vision-apps-c71-memory@aa100000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xaa100000 0x00 0x04f00000>;
+		no-map;
+	};
+	vision_apps_rtos_ipc_memory_region: vision-apps-rtos-ipc-memory-region {
+		reg = <0x00 0xb0000000 0x00 0x02000000>;
+		alignment = <0x1000>;
+		no-map;
+	};
+	vision_apps_memory_region: vision-apps-dma-memory@b2000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xb2000000 0x00 0x06000000>;
+		no-map;
+	};
+	vision_apps_shared_region: vision_apps_shared-memories {
+		compatible = "dma-heap-carveout";
+		reg = <0x00 0xb8000000 0x00 0x20000000>;
+	};
+	vision_apps_core_heaps_lo: vision-apps-core-heap-memory-lo@d8000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xd8000000 0x00 0x23000000>;
+		no-map;
+	};
+	vision_apps_main_r5fss0_core0_shared_memory_queue_region: vision-apps-r5f-virtual-eth-queues@fb000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xfb000000 0x00 0x00800000>;
+		no-map;
+	};
+	vision_apps_main_r5fss0_core0_shared_memory_bufpool_region: vision-apps-r5f-virtual-eth-buffers@fb800000 {
+		compatible = "shared-dma-pool";
+		reg = <0x00 0xfb800000 0x00 0x01800000>;
+		no-map;
+	};
+	vision_apps_core_heaps_hi: vision-apps-core-heap-memory-hi@880000000 {
+		compatible = "shared-dma-pool";
+		reg = <0x08 0x80000000 0x00 0x10000000>;
+		no-map;
+	};
+};
+
+&mcu_r5fss0_core0 {
+	memory-region = <&vision_apps_mcu_r5fss0_core0_dma_memory_region>,
+			<&vision_apps_mcu_r5fss0_core0_memory_region>;
+};
+
+&mcu_r5fss0_core1 {
+	memory-region = <&vision_apps_mcu_r5fss0_core1_dma_memory_region>,
+			<&vision_apps_mcu_r5fss0_core1_memory_region>;
+};
+
+&main_r5fss0_core0 {
+	memory-region = <&vision_apps_main_r5fss0_core0_dma_memory_region>,
+			<&vision_apps_main_r5fss0_core0_memory_region>,
+			<&vision_apps_main_r5fss0_core0_shared_memory_queue_region>,
+			<&vision_apps_main_r5fss0_core0_shared_memory_bufpool_region>;
+};
+
+&main_r5fss0_core1 {
+	memory-region = <&vision_apps_main_r5fss0_core1_dma_memory_region>,
+			<&vision_apps_main_r5fss0_core1_memory_region>;
+};
+
+&main_r5fss1_core0 {
+	memory-region = <&vision_apps_main_r5fss1_core0_dma_memory_region>,
+			<&vision_apps_main_r5fss1_core0_memory_region>;
+};
+
+&main_r5fss1_core1 {
+	memory-region = <&vision_apps_main_r5fss1_core1_dma_memory_region>,
+			<&vision_apps_main_r5fss1_core1_memory_region>;
+};
+
+&c66_0 {
+	memory-region = <&vision_apps_c66_0_dma_memory_region>,
+			<&vision_apps_c66_0_memory_region>;
+};
+
+&c66_1 {
+	memory-region = <&vision_apps_c66_1_dma_memory_region>,
+			<&vision_apps_c66_1_memory_region>;
+};
+
+&c71_0 {
+	memory-region = <&vision_apps_c71_0_dma_memory_region>,
+			<&vision_apps_c71_0_memory_region>;
+};
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map.dtsi b/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map.dtsi
index 3f5b7c4ca066..3dd53885aa32 100644
--- a/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map.dtsi
+++ b/arch/arm64/boot/dts/ti/k3-j721e-rtos-memory-map.dtsi
@@ -7,9 +7,6 @@
 
 #include <dt-bindings/soc/ti,sci_pm_domain.h>
 
-/dts-v1/;
-/plugin/;
-
 / {
 	fragment@101 {
 		target-path = "/";
@@ -99,14 +96,6 @@ &rtos_ipc_memory_region {
 	status = "disabled";
 };
 
-&main_r5fss0_core0_shared_memory_queue_region {
-	status = "disabled";
-};
-
-&main_r5fss0_core0_shared_memory_bufpool_region {
-	status = "disabled";
-};
-
 &reserved_memory {
 	#address-cells = <2>;
 	#size-cells = <2>;
@@ -116,7 +105,7 @@ vision_apps_mcu_r5fss0_core0_dma_memory_region: vision-apps-r5f-dma-memory@a0000
 		reg = <0x00 0xa0000000 0x00 0x00100000>;
 		no-map;
 	};
-	vision_apps_mcu_r5fss0_core0_memory_region: vision-apps-r5f-memory@a0100000 {
+	vision_apps_mcu_r5fss0_core0_memory_region: vision_apps-r5f-memory@a0100000 {
 		compatible = "shared-dma-pool";
 		reg = <0x00 0xa0100000 0x00 0x00f00000>;
 		no-map;
@@ -217,17 +206,17 @@ vision_apps_shared_region: vision_apps_shared-memories {
 	};
 	vision_apps_core_heaps_lo: vision-apps-core-heap-memory-lo@d8000000 {
 		compatible = "shared-dma-pool";
-		reg = <0x00 0xd8000000 0x00 0x23000000>;
+		reg = <0x00 0xd8000000 0x00 0x24000000>;
 		no-map;
 	};
-	vision_apps_main_r5fss0_core0_shared_memory_queue_region: vision-apps-r5f-virtual-eth-queues@fb000000 {
+	intercore_eth_main_r5fss0_core1_memory_region: intercore-eth-r5f-memory@fc000000 {
 		compatible = "shared-dma-pool";
-		reg = <0x00 0xfb000000 0x00 0x00800000>;
+		reg = <0x00 0xfc000000 0x00 0x02000000>;
 		no-map;
 	};
-	vision_apps_main_r5fss0_core0_shared_memory_bufpool_region: vision-apps-r5f-virtual-eth-buffers@fb800000 {
+	eeprom_shadow_memory_region: eeprom-shadow-r5f-memory@fe000000 {
 		compatible = "shared-dma-pool";
-		reg = <0x00 0xfb800000 0x00 0x01800000>;
+		reg = <0x00 0xfe000000 0x00 0x01000000>;
 		no-map;
 	};
 	vision_apps_core_heaps_hi: vision-apps-core-heap-memory-hi@880000000 {
@@ -249,14 +238,14 @@ &mcu_r5fss0_core1 {
 
 &main_r5fss0_core0 {
 	memory-region = <&vision_apps_main_r5fss0_core0_dma_memory_region>,
-			<&vision_apps_main_r5fss0_core0_memory_region>,
-			<&vision_apps_main_r5fss0_core0_shared_memory_queue_region>,
-			<&vision_apps_main_r5fss0_core0_shared_memory_bufpool_region>;
+			<&vision_apps_main_r5fss0_core0_memory_region>;
+	firmware-name = "vision_apps_eaik/vx_app_rtos_linux_mcu2_0.out";
 };
 
 &main_r5fss0_core1 {
 	memory-region = <&vision_apps_main_r5fss0_core1_dma_memory_region>,
 			<&vision_apps_main_r5fss0_core1_memory_region>;
+	firmware-name = "vision_apps_eaik/vx_app_rtos_linux_mcu2_1.out";
 };
 
 &main_r5fss1_core0 {
@@ -272,16 +261,17 @@ &main_r5fss1_core1 {
 &c66_0 {
 	memory-region = <&vision_apps_c66_0_dma_memory_region>,
 			<&vision_apps_c66_0_memory_region>;
+	firmware-name = "vision_apps_eaik/vx_app_rtos_linux_c6x_1.out";
 };
 
 &c66_1 {
 	memory-region = <&vision_apps_c66_1_dma_memory_region>,
 			<&vision_apps_c66_1_memory_region>;
+	firmware-name = "vision_apps_eaik/vx_app_rtos_linux_c6x_2.out";
 };
 
 &c71_0 {
 	memory-region = <&vision_apps_c71_0_dma_memory_region>,
 			<&vision_apps_c71_0_memory_region>;
+	firmware-name = "vision_apps_eaik/vx_app_rtos_linux_c7x_1.out";
 };
-
-
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-sk.dts b/arch/arm64/boot/dts/ti/k3-j721e-sk.dts
index 84f018e5438e..30b57f4222e8 100644
--- a/arch/arm64/boot/dts/ti/k3-j721e-sk.dts
+++ b/arch/arm64/boot/dts/ti/k3-j721e-sk.dts
@@ -1268,27 +1268,3 @@ &c71_0 {
 	memory-region = <&c71_0_dma_memory_region>,
 			<&c71_0_memory_region>;
 };
-
-&main_ehrpwm0 {
-	status = "disabled";
-};
-
-&main_ehrpwm1 {
-	status = "disabled";
-};
-
-&main_ehrpwm2 {
-	status = "disabled";
-};
-
-&main_ehrpwm3 {
-	status = "disabled";
-};
-
-&main_ehrpwm4 {
-	status = "disabled";
-};
-
-&main_ehrpwm5 {
-	status = "disabled";
-};
diff --git a/arch/arm64/boot/dts/ti/k3-j721e-vision-apps.dts b/arch/arm64/boot/dts/ti/k3-j721e-vision-apps.dts
index a1860839a627..d21e9771a3f7 100644
--- a/arch/arm64/boot/dts/ti/k3-j721e-vision-apps.dts
+++ b/arch/arm64/boot/dts/ti/k3-j721e-vision-apps.dts
@@ -5,7 +5,7 @@
  * Copyright (C) 2019 - 2021 Texas Instruments Incorporated - http://www.ti.com/
  */
 
-#include "k3-j721e-rtos-memory-map.dtsi"
+#include "k3-j721e-rtos-memory-map-old.dtsi"
 
 &main_i2c6 {
 	status = "disabled";
diff --git a/arch/arm64/boot/dts/ti/overlays/Makefile b/arch/arm64/boot/dts/ti/overlays/Makefile
new file mode 100644
index 000000000000..df59c8dc5dea
--- /dev/null
+++ b/arch/arm64/boot/dts/ti/overlays/Makefile
@@ -0,0 +1,11 @@
+# Overlays for the BeagleBone platform
+
+dtbo-$(CONFIG_ARCH_K3) += \
+	robotics-cape.dtbo \
+	k3-j721e-beagleboneai64-RPi-7inch-panel.dtbo
+
+targets += dtbs dtbs_install
+targets += $(dtbo-y)
+
+always-y	:= $(dtbo-y)
+clean-files	:= *.dtbo
diff --git a/arch/arm64/boot/dts/ti/overlays/k3-j721e-beagleboneai64-RPi-7inch-panel.dts b/arch/arm64/boot/dts/ti/overlays/k3-j721e-beagleboneai64-RPi-7inch-panel.dts
new file mode 100644
index 000000000000..216a353ec3d8
--- /dev/null
+++ b/arch/arm64/boot/dts/ti/overlays/k3-j721e-beagleboneai64-RPi-7inch-panel.dts
@@ -0,0 +1,145 @@
+// SPDX-License-Identifier: GPL-2.0
+/**
+ * DT Overlay for RPi 7inch touchscreen panel interfaced with DSI on
+ * beagleboneai64 board.
+ *
+ * Copyright (C) 2021 Texas Instruments Incorporated - https://www.ti.com/
+ */
+
+/dts-v1/;
+/plugin/;
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/pinctrl/k3.h>
+
+/ {
+	fragment@101 {
+		target-path = "/";
+
+		__overlay__ {
+			reg_bridge: reg_bridge@0 {
+				reg = <0 0 0x0 0x0>;
+				compatible = "regulator-fixed";
+				regulator-name = "bridge_reg";
+				gpio = <&reg_display 0 0>;
+				vin-supply = <&reg_display>;
+				enable-active-high;
+			};
+
+			panel_disp0: panel_disp1@0 {
+				reg = <0 0 0x0 0x0>;
+				compatible = "raspberrypi,7inch-dsi", "simple-panel";
+				backlight = <&reg_display>;
+				power-supply = <&reg_display>;
+
+				port {
+					panel_in: endpoint {
+						remote-endpoint = <&panel_bridge_out>;
+					};
+				};
+			};
+		};
+	};
+};
+
+&main_pmx0 {
+	main_i2c4_pins_default: main-i2c-pins-default {
+		pinctrl-single,pins = <
+			J721E_IOPAD(0xa8, PIN_INPUT_PULLUP, 2) /* (AD19) PRG1_MDIO0_MDIO.I2C4_SCL */
+			J721E_IOPAD(0xac, PIN_INPUT_PULLUP, 2) /* (AD18) PRG1_MDIO0_MDC.I2C4_SDA */
+		>;
+	};
+};
+
+&main_i2c4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&main_i2c4_pins_default>;
+	clock-frequency = <400000>;
+
+	reg_display: reg_display@45 {
+		compatible = "raspberrypi,7inch-touchscreen-panel-regulator";
+		reg = <0x45>;
+		gpio-controller;
+		#gpio-cells = <2>;
+	};
+
+	ft5406: ts@38 {
+		compatible = "edt,edt-ft5406";
+		reg = <0x38>;
+
+		touchscreen-size-x = < 800 >;
+		touchscreen-size-y = < 480 >;
+
+		vcc-supply = <&reg_display>;
+		reset-gpio = <&reg_display 1 1>;
+
+		touchscreen-inverted-x;
+		touchscreen-inverted-y;
+	};
+};
+
+&dss_ports {
+	#address-cells = <1>;
+	#size-cells = <0>;
+
+	port@2 {
+		reg = <2>;
+
+		dpi1_out: endpoint {
+			remote-endpoint = <&dsi0_in>;
+		};
+	};
+};
+
+&dsi0 {
+	ports {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		port@0 {
+			reg = <0>;
+			dsi0_out: endpoint {
+				remote-endpoint = <&panel_bridge_in>;
+			};
+		};
+
+		port@1 {
+			reg = <1>;
+			dsi0_in: endpoint {
+				remote-endpoint = <&dpi1_out>;
+			};
+		};
+	};
+
+	bridge@0 {
+		compatible = "toshiba,tc358762";
+		reg = <0>;
+		vddc-supply = <&reg_bridge>;
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			port@0 {
+				reg = <0>;
+				panel_bridge_in: endpoint {
+					remote-endpoint = <&dsi0_out>;
+				};
+			};
+
+			port@1 {
+				reg = <1>;
+				panel_bridge_out: endpoint {
+					remote-endpoint = <&panel_in>;
+				};
+			};
+		};
+	};
+
+};
+
+&dphy2 {
+	assigned-clocks = <&k3_clks 296 3>;
+	assigned-clock-parents = <&k3_clks 296 4>;
+	assigned-clock-rates = <19200000>;
+};
diff --git a/arch/arm64/boot/dts/ti/overlays/robotics-cape.dts b/arch/arm64/boot/dts/ti/overlays/robotics-cape.dts
new file mode 100644
index 000000000000..62808947a6a4
--- /dev/null
+++ b/arch/arm64/boot/dts/ti/overlays/robotics-cape.dts
@@ -0,0 +1,264 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * Copyright (C) 2022 Jason Kridner, BeagleBoard.org Foundation
+ */
+
+/dts-v1/;
+/plugin/;
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/pinctrl/k3.h>
+#include <dt-bindings/board/k3-j721e-bone-pins.h>
+#include <dt-bindings/soc/ti,sci_pm_domain.h>
+#include <dt-bindings/input/linux-event-codes.h>
+
+&{/chosen} {
+	overlays {
+		BB-ROBOTICS-CAPE-00B0.kernel = __TIMESTAMP__;
+	};
+};
+
+&{/} {
+	gpio_keys: gpio-keys {
+		compatible = "gpio-keys";
+
+		cape_btn0: cape_btn0 {
+			label = "MODE";
+			linux,code = <KEY_MODE>;
+			gpios = <gpio_P9_31 GPIO_ACTIVE_LOW>;
+		};
+
+		cape_btn1: cape_btn1 {
+			label = "PAUSE";
+			linux,code = <KEY_PAUSE>;
+			gpios = <gpio_P9_41 GPIO_ACTIVE_LOW>;
+		};
+	};
+};
+
+&bone_led_P9_14 {
+	status = "okay";
+	label = "green";
+	linux,default-trigger = "default-off";
+};
+
+&bone_led_P9_16 {
+	status = "okay";
+	label = "red";
+	linux,default-trigger = "default-off";
+};
+
+&bone_led_P8_18 {
+	status = "okay";
+	label = "bat25";
+	linux,default-trigger = "default-off";
+};
+
+&bone_led_P8_13 {
+	status = "okay";
+	label = "bat75";
+	linux,default-trigger = "default-off";
+};
+
+&bone_led_P8_21 {
+	status = "okay";
+	label = "capture_oe1";
+	linux,default-trigger = "default-off";
+	gpios = <gpio_P8_21 GPIO_ACTIVE_LOW>;
+};
+
+&bone_led_P8_23 {
+	status = "okay";
+	label = "capture_oe2";
+	linux,default-trigger = "default-on";
+	gpios = <gpio_P8_23 GPIO_ACTIVE_LOW>;
+};
+
+&cape_header {
+	pinctrl-names = "default";
+	pinctrl-0 = <
+		&P8_03_gpio_pin		/* Motor1_SLP# */
+		&P8_05_gpio_pin		/* Motor1_FAULT# */
+		&P8_07_gpio_pin		/* Motor1_OC# */
+		&P8_09_gpio_pin		/* Motor4_FAULT# */
+		&P8_11_pruout_pin	/* Motor4_PWM */
+		&P8_13_gpio_pin		/* LED4 */
+		&P8_15_pruin_pin	/* Capture4 */
+		&P8_17_gpio_pd_pin	/* Motor4_IN1 */
+		&P8_19_gpio_pd_pin	/* Motor4_IN2 */
+		&P8_21_gpio_pd_pin	/* CAP_OE#1 */
+		&P8_23_gpio_pd_pin	/* CAP_OE#2 */
+		&P8_25_pruin_pin	/* Ultrasonic1 */
+		&P8_27_pruin_pin	/* Ultrasonic2 */
+		&P8_29_uart_pin		/* Lidar_RX - UART8_TX */
+		&P8_31_gpio_pin		/* Motor3_FAULT# */
+		&P8_33_qep_pin		/* QEP2_B - EQEP1_B */
+		&P8_35_qep_pin		/* QEP2_A - EQEP1_A */
+		&P8_37_pruin_pin	/* Ultrasonic3 */
+		&P8_39_pruin_pin	/* Ultrasonic4 */
+		&P8_41_pruout_pin	/* Servo7 */
+		&P8_43_pruout_pin	/* Servo8 */
+		&P8_45_pruout_pin	/* Servo9 */
+
+		&P8_04_pruout_pin	/* Motor1_PWM */
+		&P8_06_gpio_pd_pin	/* Motor1_IN1 */
+		&P8_08_gpio_pd_pin	/* Motor1_IN2 */
+		&P8_10_gpio_pd_pin	/* Motor3_IN1 */
+		&P8_12_pruout_pin	/* Motor3_PWM */
+		&P8_14_pruout_pin	/* Servo2 */
+		&P8_16_gpio_pd_pin	/* Motor3_IN */
+		&P8_18_gpio_pin		/* LED3 */
+		&P8_20_pruout_pin	/* Servo5 */
+		&P8_22_uart_pin		/* BCF_SERIAL_TX - UART2_RX */
+		&P8_24_pruout_pin	/* Lidar_PWM */
+		&P8_26_pruout_pin	/* Servo6 */
+		&P8_28_uart_pin		/* Lidar_TX - UART8_RX */
+		&P8_30_gpio_pin		/* Lidar_OE */
+		&P8_32_gpio_pin		/* BCF_RST */
+		&P8_34_uart_pin		/* BCF_SERIAL_RX - UART2_TX */
+		&P8_36_gpio_pin		/* 6DOF_INT */
+		&P8_38_gpio_pd_pin	/* Motor2_IN1 */
+		&P8_40_gpio_pd_pin	/* Motor2_IN2 */
+		&P8_42_gpio_pin		/* Motor234_nSLEEP */
+		&P8_44_gpio_pin		/* Magnetometer_INT */
+
+		&P9_11_gpio_pin		/* Motor2_FAULT# */
+		&P9_13_pruout_pin	/* Motor2_PWM */
+		&P9_15_pruout_pin	/* Servo10 */
+		&P9_17_spi_pin  	/* Barometer_CS# - SPI6_CS0 */
+		&P9_19_pruout_pin	/* Servo1 */
+		&P9_21_spi_pin		/* SPI6_D0 - SDO */
+		&P9_23_spi_pin		/* IMU_CS# - SPI6_CS1 */
+		&P9_25_gpio_pin		/* Magnetometer_CS# */
+		&P9_27_qep_pin		/* QEP1_B - EQEP0_B */
+		&P9_29_pruin_pin	/* Capture3 */
+		&P9_31_gpio_pin		/* USER_BUTTON1 - MODE */
+		&P9_33_default_pin	/* Motor2_Current - AIN4 */
+		&P9_35_default_pin	/* Motor3_Current - AIN6 */
+		&P9_37_uart_pin		/* GPS_TXD */
+		&P9_39_default_pin	/* Battery_Voltage - AIN0 */
+		&P9_41_gpio_pin		/* USER_BUTTON2 - PAUSE */
+
+		&P9_12_pruout_pin	/* Servo4 */
+		&P9_14_gpio_pin		/* LED1 */
+		&P9_16_gpio_pin		/* LED2 */
+		&P9_18_spi_pin		/* SPI6_D1 - SDI */
+		&P9_20_pruout_pin	/* Servo3 */
+		&P9_22_spi_pin		/* SPI6_CLK */
+		&P9_24_i2c_pin		/* EEPROM_I2C_SCL */
+		&P9_26_i2c_pin		/* EEPROM_I2C_SDA */
+		&P9_28_pruin_pin	/* Capture1 */
+		&P9_30_pruin_pin	/* Capture2 */
+		&P9_36_default_pin	/* Motor4_Current - AIN5 */
+		&P9_38_uart_pin		/* GPS_RXD */
+		&P9_40_default_pin	/* Motor1_Current - AIN1 */
+		&P9_42_qep_pin		/* QEP1_A - EQEP0_A */
+	>;
+};
+
+&bone_spi_0 {
+	ti,spi-num-cs = <3>;
+	ti,pindir-d0-out-d1-in;
+	cs-gpios = <0>, /* P9_17 */
+		   <0>, /* P9_23 */
+		   <gpio_P9_25 GPIO_ACTIVE_LOW>;
+
+	#address-cells = <1>;
+	#size-cells = <0>;
+
+	pressure@0 {
+		compatible = "bosch,bmp280";
+		reg = <0>;	/* CE0 */
+		spi-max-frequency = <5000000>;
+	};
+
+	imu@1 {
+		compatible = "st,lsm6ds3tr-c";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <1>;	/* CE1 */
+		spi-max-frequency = <5000000>;
+	};
+
+	magn@2 {
+		compatible = "bosch,bmm150_magn";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <2>;	/* CE2 */
+		spi-max-frequency = <5000000>;
+	};
+};
+
+&cbass_main {
+	#address-cells = <2>;
+	#size-cells = <2>;
+
+	/* TODO: the base for this should be in the board DT */
+	eqep0: qep@3200000 {
+		compatible = "ti,am3352-eqep";
+		reg = <0 0x3200000 0 0x100>;
+		power-domains = <&k3_pds 94 TI_SCI_PD_EXCLUSIVE>;
+		clocks = <&k3_clks 94 0>;
+		clock-names = "eqep0-ficlk";
+		interrupt-parent = <&gic500>;
+		interrupts = <GIC_SPI 322 IRQ_TYPE_EDGE_RISING>;
+		interrupt-names = "eqep0";
+		symlink = "bone/qep/0"; /* A - P9_42, B - P9_27 */
+
+		count_mode = <0>;
+		swap_input = <0>;
+		invert_qa = <1>;
+		invert_qb = <1>;
+		invert_qi = <0>;
+		invert_qs = <0>;
+	};
+
+	eqep1: qep@3210000 {
+		compatible = "ti,am3352-eqep";
+		reg = <0 0x3210000 0 0x100>;
+		power-domains = <&k3_pds 95 TI_SCI_PD_EXCLUSIVE>;
+		clocks = <&k3_clks 95 0>;
+		clock-names = "eqep1-ficlk";
+		interrupt-parent = <&gic500>;
+		interrupts = <GIC_SPI 323 IRQ_TYPE_EDGE_RISING>;
+		interrupt-names = "eqep1";
+		symlink = "bone/qep/1"; /* A - P8_35, B - P8_33 */
+
+		count_mode = <0>;
+		swap_input = <0>;
+		invert_qa = <1>;
+		invert_qb = <1>;
+		invert_qi = <0>;
+		invert_qs = <0>;
+	};
+
+	eqep2: qep@3220000 {
+		status = "disabled";
+		compatible = "ti,am3352-eqep";
+		reg = <0 0x3220000 0 0x100>;
+		power-domains = <&k3_pds 96 TI_SCI_PD_EXCLUSIVE>;
+		clocks = <&k3_clks 96 0>;
+		clock-names = "eqep2-ficlk";
+		interrupt-parent = <&gic500>;
+		interrupts = <GIC_SPI 324 IRQ_TYPE_EDGE_RISING>;
+		interrupt-names = "eqep2";
+
+		count_mode = <0>;
+		swap_input = <0>;
+		invert_qa = <1>;
+		invert_qb = <1>;
+		invert_qi = <0>;
+		invert_qs = <0>;
+	};
+};
+
+/* TODO: this is not the standard bone/uart/1 pinout location */
+&bone_uart_1 {
+	status = "okay";
+
+	bcfserial {
+		compatible = "beagle,bcfserial";
+	};
+};
diff --git a/include/dt-bindings/board/am572x-bone-pins.h b/include/dt-bindings/board/am572x-bone-pins.h
new file mode 100644
index 000000000000..89f0704909a1
--- /dev/null
+++ b/include/dt-bindings/board/am572x-bone-pins.h
@@ -0,0 +1,179 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * Copyright (C) 2020 Deepak Khatri <deepaklorkhatri7@gmail.com>
+ * See Cape Interface Spec page for more info on Bone Buses
+ * https://elinux.org/Beagleboard:BeagleBone_cape_interface_spec
+ */
+
+#ifndef _DT_BINDINGS_BOARD_AM572X_BONE_PINS_H
+#define _DT_BINDINGS_BOARD_AM572X_BONE_PINS_H
+
+#define bb_device 1
+#define board_soc AM572X
+
+#define gpio_P8_03 &gpio1 24
+#define gpio_P8_04 &gpio1 25
+#define gpio_P8_05 &gpio7 1
+#define gpio_P8_06 &gpio7 2
+#define gpio_P8_07 &gpio6 5
+#define gpio_P8_08 &gpio6 6
+#define gpio_P8_09 &gpio6 18
+#define gpio_P8_10 &gpio6 4
+#define gpio_P8_11 &gpio3 11
+#define gpio_P8_12 &gpio3 10
+#define gpio_P8_13 &gpio4 11
+#define gpio_P8_14 &gpio4 13
+#define gpio_P8_15 &gpio4 3
+#define gpio_P8_16 &gpio4 29
+#define gpio_P8_17 &gpio8 18
+#define gpio_P8_18 &gpio4 9
+#define gpio_P8_19 &gpio4 10
+#define gpio_P8_20 &gpio6 30
+#define gpio_P8_21 &gpio6 29
+#define gpio_P8_22 &gpio1 23
+#define gpio_P8_23 &gpio1 22
+#define gpio_P8_24 &gpio7 0
+#define gpio_P8_25 &gpio6 31
+#define gpio_P8_26 &gpio4 28
+#define gpio_P8_27 &gpio4 23
+#define gpio_P8_28 &gpio4 19
+#define gpio_P8_29 &gpio4 22
+#define gpio_P8_30 &gpio4 20
+#define gpio_P8_31 &gpio8 14
+#define gpio_P8_32 &gpio8 15
+#define gpio_P8_33 &gpio8 13
+#define gpio_P8_34 &gpio8 11
+#define gpio_P8_35 &gpio8 12
+#define gpio_P8_36 &gpio8 10
+#define gpio_P8_37 &gpio8 8
+#define gpio_P8_38 &gpio8 9
+#define gpio_P8_39 &gpio8 6
+#define gpio_P8_40 &gpio8 7
+#define gpio_P8_41 &gpio8 4
+#define gpio_P8_42 &gpio8 5
+#define gpio_P8_43 &gpio8 2
+#define gpio_P8_44 &gpio8 3
+#define gpio_P8_45 &gpio8 0
+#define gpio_P8_46 &gpio8 1
+#define gpio_P9_11 &gpio8 17
+#define gpio_P9_12 &gpio5 0
+#define gpio_P9_13 &gpio6 12
+#define gpio_P9_14 &gpio4 25
+#define gpio_P9_15 &gpio3 12
+#define gpio_P9_16 &gpio4 26
+#define gpio_P9_17 &gpio7 17
+#define gpio_P9_18 &gpio7 16
+#define gpio_P9_19 &gpio7 3
+#define gpio_P9_20 &gpio7 4
+#define gpio_P9_21 &gpio3 3
+#define gpio_P9_22 &gpio6 19
+#define gpio_P9_23 &gpio7 11
+#define gpio_P9_24 &gpio6 15
+#define gpio_P9_25 &gpio6 17
+#define gpio_P9_26 &gpio6 14
+#define gpio_P9_27 &gpio4 15
+#define gpio_P9_28 &gpio4 17
+#define gpio_P9_29 &gpio5 11
+#define gpio_P9_30 &gpio5 12
+#define gpio_P9_31 &gpio5 10
+#define gpio_P9_41 &gpio6 20
+#define gpio_P9_42 &gpio4 18
+
+#define P8_03(mode) DRA7XX_CORE_IOPAD(0x379C, mode)  /* AB8: mmc3_dat6 */
+#define P8_04(mode) DRA7XX_CORE_IOPAD(0x37A0, mode)  /* AB5: mmc3_dat7 */
+#define P8_05(mode) DRA7XX_CORE_IOPAD(0x378C, mode)  /* AC9: mmc3_dat2 */
+#define P8_06(mode) DRA7XX_CORE_IOPAD(0x3790, mode)  /* AC3: mmc3_dat3 */
+#define P8_07(mode) DRA7XX_CORE_IOPAD(0x36EC, mode)  /* G14: mcasp1_axr14 */
+#define P8_08(mode) DRA7XX_CORE_IOPAD(0x36F0, mode)  /* F14: mcasp1_axr15 */
+#define P8_09(mode) DRA7XX_CORE_IOPAD(0x3698, mode)  /* E17: xref_clk1 */
+#define P8_10(mode) DRA7XX_CORE_IOPAD(0x36E8, mode)  /* A13: mcasp1_axr13 */
+#define P8_11(mode) DRA7XX_CORE_IOPAD(0x3510, mode)  /* AH4: vin1a_d7 */
+#define P8_12(mode) DRA7XX_CORE_IOPAD(0x350C, mode)  /* AG6: vin1a_d6 */
+#define P8_13(mode) DRA7XX_CORE_IOPAD(0x3590, mode)  /* D3: vin2a_d10 */
+#define P8_14(mode) DRA7XX_CORE_IOPAD(0x3598, mode)  /* D5: vin2a_d12 */
+#define P8_15A(mode) DRA7XX_CORE_IOPAD(0x3570, mode) /* D1: vin2a_d2 */
+#define P8_15B(mode) DRA7XX_CORE_IOPAD(0x35B4, mode) /* A3: vin2a_d19 */
+#define P8_16(mode) DRA7XX_CORE_IOPAD(0x35BC, mode)  /* B4: vin2a_d21 */
+#define P8_17(mode) DRA7XX_CORE_IOPAD(0x3624, mode)  /* A7: vout1_d18 */
+#define P8_18(mode) DRA7XX_CORE_IOPAD(0x3588, mode)  /* F5: vin2a_d8 */
+#define P8_19(mode) DRA7XX_CORE_IOPAD(0x358C, mode)  /* E6: vin2a_d9 */
+#define P8_20(mode) DRA7XX_CORE_IOPAD(0x3780, mode)  /* AC4: mmc3_cmd */
+#define P8_21(mode) DRA7XX_CORE_IOPAD(0x377C, mode)  /* AD4: mmc3_clk */
+#define P8_22(mode) DRA7XX_CORE_IOPAD(0x3798, mode)  /* AD6: mmc3_dat5 */
+#define P8_23(mode) DRA7XX_CORE_IOPAD(0x3794, mode)  /* AC8: mmc3_dat4 */
+#define P8_24(mode) DRA7XX_CORE_IOPAD(0x3788, mode)  /* AC6: mmc3_dat1 */
+#define P8_25(mode) DRA7XX_CORE_IOPAD(0x3784, mode)  /* AC7: mmc3_dat0 */
+#define P8_26(mode) DRA7XX_CORE_IOPAD(0x35B8, mode)  /* B3: vin2a_d20 */
+#define P8_27A(mode) DRA7XX_CORE_IOPAD(0x35D8, mode) /* E11: vout1_vsync */
+#define P8_27B(mode) DRA7XX_CORE_IOPAD(0x3628, mode) /* A8: vout1_d19 */
+#define P8_28A(mode) DRA7XX_CORE_IOPAD(0x35C8, mode) /* D11: vout1_clk */
+#define P8_28B(mode) DRA7XX_CORE_IOPAD(0x362C, mode) /* C9: vout1_d20 */
+#define P8_29A(mode) DRA7XX_CORE_IOPAD(0x35D4, mode) /* C11: vout1_hsync */
+#define P8_29B(mode) DRA7XX_CORE_IOPAD(0x3630, mode) /* A9: vout1_d21 */
+#define P8_30A(mode) DRA7XX_CORE_IOPAD(0x35CC, mode) /* B10: vout1_de */
+#define P8_30B(mode) DRA7XX_CORE_IOPAD(0x3634, mode) /* B9: vout1_d22 */
+#define P8_31A(mode) DRA7XX_CORE_IOPAD(0x3614, mode) /* C8: vout1_d14 */
+#define P8_31B(mode) DRA7XX_CORE_IOPAD(0x373C, mode) /* G16: mcasp4_axr0 */
+#define P8_32A(mode) DRA7XX_CORE_IOPAD(0x3618, mode) /* C7: vout1_d15 */
+#define P8_32B(mode) DRA7XX_CORE_IOPAD(0x3740, mode) /* D17: mcasp4_axr1 */
+#define P8_33A(mode) DRA7XX_CORE_IOPAD(0x3610, mode) /* C6: vout1_d13 */
+#define P8_33B(mode) DRA7XX_CORE_IOPAD(0x34E8, mode) /* AF9: vin1a_fld0 */
+#define P8_34A(mode) DRA7XX_CORE_IOPAD(0x3608, mode) /* D8: vout1_d11 */
+#define P8_34B(mode) DRA7XX_CORE_IOPAD(0x3564, mode) /* G6: vin2a_vsync0 */
+#define P8_35A(mode) DRA7XX_CORE_IOPAD(0x360C, mode) /* A5: vout1_d12 */
+#define P8_35B(mode) DRA7XX_CORE_IOPAD(0x34E4, mode) /* AD9: vin1a_de0 */
+#define P8_36A(mode) DRA7XX_CORE_IOPAD(0x3604, mode) /* D7: vout1_d10 */
+#define P8_36B(mode) DRA7XX_CORE_IOPAD(0x3568, mode) /* F2: vin2a_d0 */
+#define P8_37A(mode) DRA7XX_CORE_IOPAD(0x35FC, mode) /* E8: vout1_d8 */
+#define P8_37B(mode) DRA7XX_CORE_IOPAD(0x3738, mode) /* A21: mcasp4_fsx */
+#define P8_38A(mode) DRA7XX_CORE_IOPAD(0x3600, mode) /* D9: vout1_d9 */
+#define P8_38B(mode) DRA7XX_CORE_IOPAD(0x3734, mode) /* C18: mcasp4_aclkx */
+#define P8_39(mode) DRA7XX_CORE_IOPAD(0x35F4, mode)  /* F8: vout1_d6 */
+#define P8_40(mode) DRA7XX_CORE_IOPAD(0x35F8, mode)  /* E7: vout1_d7 */
+#define P8_41(mode) DRA7XX_CORE_IOPAD(0x35EC, mode)  /* E9: vout1_d4 */
+#define P8_42(mode) DRA7XX_CORE_IOPAD(0x35F0, mode)  /* F9: vout1_d5 */
+#define P8_43(mode) DRA7XX_CORE_IOPAD(0x35E4, mode)  /* F10: vout1_d2 */
+#define P8_44(mode) DRA7XX_CORE_IOPAD(0x35E8, mode)  /* G11: vout1_d3 */
+#define P8_45A(mode) DRA7XX_CORE_IOPAD(0x35DC, mode) /* F11: vout1_d0 */
+#define P8_45B(mode) DRA7XX_CORE_IOPAD(0x361C, mode) /* B7: vout1_d16 */
+#define P8_46A(mode) DRA7XX_CORE_IOPAD(0x35E0, mode) /* G10: vout1_d1 */
+#define P8_46B(mode) DRA7XX_CORE_IOPAD(0x3638, mode) /* A10: vout1_d23 */
+#define P9_11A(mode) DRA7XX_CORE_IOPAD(0x372C, mode) /* B19: mcasp3_axr0 */
+#define P9_11B(mode) DRA7XX_CORE_IOPAD(0x3620, mode) /* B8: vout1_d17 */
+#define P9_12(mode) DRA7XX_CORE_IOPAD(0x36AC, mode)  /* B14: mcasp1_aclkr */
+#define P9_13A(mode) DRA7XX_CORE_IOPAD(0x3730, mode)  /* C17: mcasp3_axr1 */
+#define P9_13B(mode) DRA7XX_CORE_IOPAD(0x3680, mode)  /* AB10: usb1_drvvbus */
+#define P9_14(mode) DRA7XX_CORE_IOPAD(0x35AC, mode)  /* D6: vin2a_d17 */
+#define P9_15(mode) DRA7XX_CORE_IOPAD(0x3514, mode)  /* AG4: vin1a_d8 */
+#define P9_16(mode) DRA7XX_CORE_IOPAD(0x35B0, mode)  /* C5: vin2a_d18 */
+#define P9_17A(mode) DRA7XX_CORE_IOPAD(0x37CC, mode) /* B24: spi2_cs0 */
+#define P9_17B(mode) DRA7XX_CORE_IOPAD(0x36B8, mode) /* F12: mcasp1_axr1 */
+#define P9_18A(mode) DRA7XX_CORE_IOPAD(0x37C8, mode) /* G17: spi2_d0 */
+#define P9_18B(mode) DRA7XX_CORE_IOPAD(0x36B4, mode) /* G12: mcasp1_axr0 */
+#define P9_19A(mode) DRA7XX_CORE_IOPAD(0x3440, mode) /* R6: gpmc_a0.i2c4_scl */
+#define P9_19B(mode) DRA7XX_CORE_IOPAD(0x357C, mode) /* F4: vin2a_d5.pr1_pru1_gpi2 */
+#define P9_20A(mode) DRA7XX_CORE_IOPAD(0x3444, mode) /* T9: gpmc_a1.i2c4_sda */
+#define P9_20B(mode) DRA7XX_CORE_IOPAD(0x3578, mode) /* D2: vin2a_d4.pr1_pru1_gpi1 */
+#define P9_21A(mode) DRA7XX_CORE_IOPAD(0x34F0, mode) /* AF8: vin1a_vsync0 */
+#define P9_21B(mode) DRA7XX_CORE_IOPAD(0x37C4, mode) /* B22: spi2_d1 */
+#define P9_22A(mode) DRA7XX_CORE_IOPAD(0x369C, mode) /* B26: xref_clk2 */
+#define P9_22B(mode) DRA7XX_CORE_IOPAD(0x37C0, mode) /* A26: spi2_sclk */
+#define P9_23(mode) DRA7XX_CORE_IOPAD(0x37B4, mode)  /* A22: spi1_cs1 */
+#define P9_24(mode) DRA7XX_CORE_IOPAD(0x368C, mode)  /* F20: gpio6_15 */
+#define P9_25(mode) DRA7XX_CORE_IOPAD(0x3694, mode)  /* D18: xref_clk0 */
+#define P9_26A(mode) DRA7XX_CORE_IOPAD(0x3688, mode) /* E21: gpio6_14 */
+#define P9_26B(mode) DRA7XX_CORE_IOPAD(0x3544, mode) /* AE2: vin1a_d20 */
+#define P9_27A(mode) DRA7XX_CORE_IOPAD(0x35A0, mode) /* C3: vin2a_d14 */
+#define P9_27B(mode) DRA7XX_CORE_IOPAD(0x36B0, mode) /* J14: mcasp1_fsr */
+#define P9_28(mode) DRA7XX_CORE_IOPAD(0x36E0, mode)  /* A12: mcasp1_axr11 */
+#define P9_29A(mode) DRA7XX_CORE_IOPAD(0x36D8, mode) /* A11: mcasp1_axr9 */
+#define P9_29B(mode) DRA7XX_CORE_IOPAD(0x36A8, mode) /* D14: mcasp1_fsx */
+#define P9_30(mode) DRA7XX_CORE_IOPAD(0x36DC, mode)  /* B13: mcasp1_axr10 */
+#define P9_31A(mode) DRA7XX_CORE_IOPAD(0x36D4, mode) /* B12: mcasp1_axr8 */
+#define P9_31B(mode) DRA7XX_CORE_IOPAD(0x36A4, mode) /* C14: mcasp1_aclkx */
+#define P9_41A(mode) DRA7XX_CORE_IOPAD(0x36A0, mode) /* C23: xref_clk3 */
+#define P9_41B(mode) DRA7XX_CORE_IOPAD(0x3580, mode) /* C1: vin2a_d6 */
+#define P9_42A(mode) DRA7XX_CORE_IOPAD(0x36E4, mode) /* E14: mcasp1_axr12 */
+#define P9_42B(mode) DRA7XX_CORE_IOPAD(0x359C, mode) /* C2: vin2a_d13 */
+
+#endif
diff --git a/include/dt-bindings/board/k3-j721e-bone-pins.h b/include/dt-bindings/board/k3-j721e-bone-pins.h
new file mode 100644
index 000000000000..fe0cefa16e0b
--- /dev/null
+++ b/include/dt-bindings/board/k3-j721e-bone-pins.h
@@ -0,0 +1,229 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * Copyright (C) 2020 Deepak Khatri <deepaklorkhatri7@gmail.com>
+ * Copyright (C) 2021 Jason Kridner <jkridner@beagleboard.org>
+ * See Cape Interface Spec page for more info on Bone Buses
+ * https://elinux.org/Beagleboard:BeagleBone_cape_interface_spec
+ */
+
+#ifndef _DT_BINDINGS_BOARD_TDA4VM_BONE_PINS_H
+#define _DT_BINDINGS_BOARD_TDA4VM_BONE_PINS_H
+
+#define bb_device 1
+#define board_soc TDA4VM
+
+#define gpio_P8_03 &main_gpio0 20 /* AH21 */
+#define gpio_P8_04 &main_gpio0 48 /* AC29 */
+#define gpio_P8_05 &main_gpio0 33 /* AH25 */
+#define gpio_P8_06 &main_gpio0 34 /* AG25 */
+#define gpio_P8_07 &main_gpio0 15 /* AD24 */
+#define gpio_P8_08 &main_gpio0 14 /* AG24 */
+#define gpio_P8_09 &main_gpio0 17 /* AE24 */
+#define gpio_P8_10 &main_gpio0 16
+#define gpio_P8_11 &main_gpio0 60 /* AB24 */
+#define gpio_P8_12 &main_gpio0 59
+#define gpio_P8_13 &main_gpio0 89 /* V27 */
+#define gpio_P8_14 &main_gpio0 75
+#define gpio_P8_15 &main_gpio0 61 /* AB29 */
+#define gpio_P8_16 &main_gpio0 62
+#define gpio_P8_17 &main_gpio0 3  /* AF22 */
+#define gpio_P8_18 &main_gpio0 4
+#define gpio_P8_19 &main_gpio0 88 /* V29 */
+#define gpio_P8_20 &main_gpio0 76
+#define gpio_P8_21 &main_gpio0 30 /* AF21 */
+#define gpio_P8_22 &main_gpio0 5
+#define gpio_P8_23 &main_gpio0 31 /* AB23 */
+#define gpio_P8_24 &main_gpio0 6
+#define gpio_P8_25 &main_gpio0 35 /* AH26 */
+#define gpio_P8_26 &main_gpio0 51
+#define gpio_P8_27 &main_gpio0 71 /* AA28 */
+#define gpio_P8_28 &main_gpio0 72
+#define gpio_P8_29 &main_gpio0 73 /* AA25 */
+#define gpio_P8_30 &main_gpio0 74
+#define gpio_P8_31A &main_gpio0 32 /* AJ25 */
+#define gpio_P8_31B &main_gpio0 63 /* AE29 */
+#define gpio_P8_31 gpio_P8_31A
+#define gpio_P8_32 &main_gpio0 26 /* TODO: A/B */
+#define gpio_P8_33A &main_gpio0 25 /* AH24 */
+#define gpio_P8_33B &main_gpio0 110 /* AA2 */
+#define gpio_P8_33 gpio_P8_33A
+#define gpio_P8_34 &main_gpio0 7
+#define gpio_P8_35A &main_gpio0 24 /* AD23 */
+#define gpio_P8_35B &main_gpio0 116 /* Y3 */
+#define gpio_P8_35 gpio_P8_35A
+#define gpio_P8_36 &main_gpio0 8
+#define gpio_P8_37A &main_gpio0 106 /* Y27 */
+#define gpio_P8_37B &main_gpio0 11 /* AD21 */
+#define gpio_P8_37 gpio_P8_37A
+#define gpio_P8_38 &main_gpio0 105
+#define gpio_P8_39 &main_gpio0 69 /* AC26 */
+#define gpio_P8_40 &main_gpio0 70
+#define gpio_P8_41 &main_gpio0 67 /* AD29 */
+#define gpio_P8_42 &main_gpio0 68
+#define gpio_P8_43 &main_gpio0 65 /* AD27 */
+#define gpio_P8_44 &main_gpio0 66
+#define gpio_P8_45 &main_gpio0 79 /* AG29 */
+#define gpio_P8_46 &main_gpio0 80
+#define gpio_P9_11 &main_gpio0 1
+#define gpio_P9_12 &main_gpio0 45
+#define gpio_P9_13 &main_gpio0 2
+#define gpio_P9_14 &main_gpio0 93
+#define gpio_P9_15 &main_gpio0 47
+#define gpio_P9_16 &main_gpio0 94
+#define gpio_P9_17 &main_gpio0 28
+#define gpio_P9_17A &main_gpio0 28
+#define gpio_P9_17B &main_gpio0 115
+#define gpio_P9_18 &main_gpio0 40
+#define gpio_P9_18A &main_gpio0 40
+#define gpio_P9_18B &main_gpio0 120
+#define gpio_P9_19 &main_gpio0 78
+#define gpio_P9_19A &main_gpio1 1
+#define gpio_P9_19B &main_gpio0 78
+#define gpio_P9_20 &main_gpio0 77
+#define gpio_P9_20A &main_gpio1 2
+#define gpio_P9_20B &main_gpio0 77
+#define gpio_P9_21 &main_gpio0 39
+#define gpio_P9_21A &main_gpio0 39
+#define gpio_P9_21B &main_gpio0 90
+#define gpio_P9_22 &main_gpio0 38
+#define gpio_P9_22A &main_gpio0 38
+#define gpio_P9_22B &main_gpio0 91
+#define gpio_P9_23 &main_gpio0 10
+#define gpio_P9_24 &main_gpio0 13
+#define gpio_P9_24A &main_gpio0 119
+#define gpio_P9_24B &main_gpio0 13
+#define gpio_P9_25 &main_gpio0 127
+#define gpio_P9_25A &main_gpio0 127
+#define gpio_P9_25B &main_gpio0 104
+#define gpio_P9_26 &main_gpio0 12
+#define gpio_P9_26A &main_gpio0 118
+#define gpio_P9_26B &main_gpio0 12
+#define gpio_P9_27 &main_gpio0 46
+#define gpio_P9_27A &main_gpio0 46
+#define gpio_P9_27B &main_gpio0 127
+#define gpio_P9_28 &main_gpio1 11
+#define gpio_P9_28A &main_gpio1 11
+#define gpio_P9_28B &main_gpio0 43
+#define gpio_P9_29 &main_gpio0 53
+#define gpio_P9_29A &main_gpio1 14
+#define gpio_P9_29B &main_gpio0 53
+#define gpio_P9_30 &main_gpio0 44
+#define gpio_P9_30A &main_gpio1 13
+#define gpio_P9_30B &main_gpio0 44
+#define gpio_P9_31A &main_gpio1 12
+#define gpio_P9_31B &main_gpio0 52
+#define gpio_P9_31 gpio_P9_31B
+#define gpio_P9_33 &main_gpio0 50
+#define gpio_P9_35 &main_gpio0 55
+#define gpio_P9_36 &main_gpio0 56
+#define gpio_P9_37 &main_gpio0 57
+#define gpio_P9_38 &main_gpio0 58
+#define gpio_P9_39 &main_gpio0 54
+#define gpio_P9_40 &main_gpio0 81
+#define gpio_P9_41 &main_gpio1 0
+#define gpio_P9_42 &main_gpio0 123
+
+#define P8_03(mode, mux)  J721E_IOPAD(0x054, mode, mux)       /* AH21 */
+#define P8_04(mode, mux)  J721E_IOPAD(0x0C4, mode, mux)       /* AC29 - BOOTMODE2 */
+#define P8_05(mode, mux)  J721E_IOPAD(0x088, mode, mux)       /* AH25 */
+#define P8_06(mode, mux)  J721E_IOPAD(0x08C, mode, mux)       /* AG25 */
+#define P8_07(mode, mux)  J721E_IOPAD(0x03C, mode, mux)       /* AD24 */
+#define P8_08(mode, mux)  J721E_IOPAD(0x038, mode, mux)       /* AG24 */
+#define P8_09(mode, mux)  J721E_IOPAD(0x044, mode, mux)       /* AE24 */
+#define P8_10(mode, mux)  J721E_IOPAD(0x040, mode, mux)       /* AC24 */
+#define P8_11(mode, mux)  J721E_IOPAD(0x0F4, mode, mux)       /* AB24 - BOOTMODE7 */
+#define P8_12(mode, mux)  J721E_IOPAD(0x0F0, mode, mux)       /* AH28 */
+#define P8_13(mode, mux)  J721E_IOPAD(0x168, mode, mux)       /* V27 */
+#define P8_14(mode, mux)  J721E_IOPAD(0x130, mode, mux)       /* AF27 */
+#define P8_15(mode, mux)  J721E_IOPAD(0x0F8, mode, mux)       /* AB29 */
+#define P8_16(mode, mux)  J721E_IOPAD(0x0FC, mode, mux)       /* AB28 */
+#define P8_17(mode, mux)  J721E_IOPAD(0x00C, mode, mux)       /* AF22 */
+#define P8_18(mode, mux)  J721E_IOPAD(0x010, mode, mux)       /* AJ23 */
+#define P8_19(mode, mux)  J721E_IOPAD(0x164, mode, mux)       /* V29 */
+#define P8_20(mode, mux)  J721E_IOPAD(0x134, mode, mux)       /* AF26 */
+#define P8_21(mode, mux)  J721E_IOPAD(0x07C, mode, mux)       /* AF21 */
+#define P8_22(mode, mux)  J721E_IOPAD(0x014, mode, mux)       /* AH23 */
+#define P8_23(mode, mux)  J721E_IOPAD(0x080, mode, mux)       /* AB23 */
+#define P8_24(mode, mux)  J721E_IOPAD(0x018, mode, mux)       /* AD20 - BOOTMODE0 */
+#define P8_25(mode, mux)  J721E_IOPAD(0x090, mode, mux)       /* AH26 */
+#define P8_26(mode, mux)  J721E_IOPAD(0x0D0, mode, mux)       /* AC27 */
+#define P8_27(mode, mux)  J721E_IOPAD(0x120, mode, mux)       /* AA28 */
+#define P8_28(mode, mux)  J721E_IOPAD(0x124, mode, mux)       /* Y24 */
+#define P8_29(mode, mux)  J721E_IOPAD(0x128, mode, mux)       /* AA25 */
+#define P8_30(mode, mux)  J721E_IOPAD(0x12C, mode, mux)       /* AG26 */
+#define P8_31A(mode, mux) J721E_IOPAD(0x084, mode, mux)       /* AJ25 */
+#define P8_31B(mode, mux) J721E_IOPAD(0x100, mode, mux)       /* AE29 */
+#define P8_32A(mode, mux) J721E_IOPAD(0x06C, mode, mux)       /* AG21 */
+#define P8_32B(mode, mux) J721E_IOPAD(0x104, mode, mux)       /* AD28 */
+#define P8_33A(mode, mux) J721E_IOPAD(0x068, mode, mux)       /* AH24 */
+#define P8_33B(mode, mux) J721E_IOPAD(0x1C0, mode, mux)       /* AA2 */
+#define P8_34(mode, mux)  J721E_IOPAD(0x01C, mode, mux)       /* AD22 */
+#define P8_35A(mode, mux) J721E_IOPAD(0x064, mode, mux)       /* AD23 */
+#define P8_35B(mode, mux) J721E_IOPAD(0x1D4, mode, mux)       /* Y3 */
+#define P8_36(mode, mux)  J721E_IOPAD(0x020, mode, mux)       /* AE20 */
+#define P8_37A(mode, mux) J721E_IOPAD(0x02C, mode, mux)       /* AD21 */
+#define P8_37B(mode, mux) J721E_IOPAD(0x1AC, mode, mux)       /* Y27 */
+#define P8_38A(mode, mux) J721E_IOPAD(0x024, mode, mux)       /* AJ20 */
+#define P8_38B(mode, mux) J721E_IOPAD(0x1A8, mode, mux)       /* Y29 */
+#define P8_39(mode, mux)  J721E_IOPAD(0x118, mode, mux)       /* AC26 */
+#define P8_40(mode, mux)  J721E_IOPAD(0x11C, mode, mux)       /* AA24 */
+#define P8_41(mode, mux)  J721E_IOPAD(0x110, mode, mux)       /* AD29 */
+#define P8_42(mode, mux)  J721E_IOPAD(0x114, mode, mux)       /* AB27 - BOOTMODE6 */
+#define P8_43(mode, mux)  J721E_IOPAD(0x108, mode, mux)       /* AD27 */
+#define P8_44(mode, mux)  J721E_IOPAD(0x10C, mode, mux)       /* AC25 */
+#define P8_45(mode, mux)  J721E_IOPAD(0x140, mode, mux)       /* AG29 */
+#define P8_46(mode, mux)  J721E_IOPAD(0x144, mode, mux)       /* Y25 - BOOTMODE3 */
+#define P9_11(mode, mux)  J721E_IOPAD(0x004, mode, mux)       /* AC23 */
+#define P9_12(mode, mux)  J721E_IOPAD(0x0B8, mode, mux)       /* AE27 */
+#define P9_13(mode, mux)  J721E_IOPAD(0x008, mode, mux)       /* AG22 */
+#define P9_14(mode, mux)  J721E_IOPAD(0x178, mode, mux)       /* U27 */
+#define P9_15(mode, mux)  J721E_IOPAD(0x0C0, mode, mux)       /* AD25 */
+#define P9_16(mode, mux)  J721E_IOPAD(0x17C, mode, mux)       /* U24 */
+#define P9_17A(mode, mux) J721E_IOPAD(0x074, mode, mux)       /* AC21 */
+#define P9_17B(mode, mux) J721E_IOPAD(0x1D0, mode, mux)       /* AA3 */
+#define P9_18A(mode, mux) J721E_IOPAD(0x0A4, mode, mux)       /* AH22 */
+#define P9_18B(mode, mux) J721E_IOPAD(0x1E4, mode, mux)       /* Y2 */
+#define P9_19A(mode, mux) J721E_IOPAD(0x208, mode, mux)       /* W5 */
+#define P9_19B(mode, mux) J721E_IOPAD(0x13C, mode, mux)       /* AF29 */
+#define P9_20A(mode, mux) J721E_IOPAD(0x20C, mode, mux)       /* W6 */
+#define P9_20B(mode, mux) J721E_IOPAD(0x138, mode, mux)       /* AE25 */
+#define P9_21A(mode, mux) J721E_IOPAD(0x0A0, mode, mux)       /* AJ22 */
+#define P9_21B(mode, mux) J721E_IOPAD(0x16C, mode, mux)       /* U28 */
+#define P9_22A(mode, mux) J721E_IOPAD(0x09C, mode, mux)       /* AC22 - BOOTMODE1 */
+#define P9_22B(mode, mux) J721E_IOPAD(0x170, mode, mux)       /* U29 */
+#define P9_23(mode, mux)  J721E_IOPAD(0x028, mode, mux)       /* AG20 */
+#define P9_24A(mode, mux) J721E_IOPAD(0x1E0, mode, mux)       /* Y5 */
+#define P9_24B(mode, mux) J721E_IOPAD(0x034, mode, mux)       /* AJ24 */
+#define P9_25A(mode, mux) J721E_IOPAD(0x200, mode, mux)       /* AC4 */
+#define P9_25B(mode, mux) J721E_IOPAD(0x1A4, mode, mux)       /* W26 */
+#define P9_26A(mode, mux) J721E_IOPAD(0x1DC, mode, mux)       /* Y1 */
+#define P9_26B(mode, mux) J721E_IOPAD(0x030, mode, mux)       /* AF24 */
+#define P9_27A(mode, mux) J721E_IOPAD(0x0BC, mode, mux)       /* AD26 */
+#define P9_27B(mode, mux) J721E_IOPAD(0x1F4, mode, mux)       /* AB1 */
+#define P9_28A(mode, mux) J721E_IOPAD(0x230, mode, mux)       /* U2 */
+#define P9_28B(mode, mux) J721E_IOPAD(0x0B0, mode, mux)       /* AF28 */
+#define P9_29A(mode, mux) J721E_IOPAD(0x23C, mode, mux)       /* V5 */
+#define P9_29B(mode, mux) J721E_IOPAD(0x0D8, mode, mux)       /* AB25 */
+#define P9_30A(mode, mux) J721E_IOPAD(0x238, mode, mux)       /* V6 */
+#define P9_30B(mode, mux) J721E_IOPAD(0x0B4, mode, mux)       /* AE28 */
+#define P9_31A(mode, mux) J721E_IOPAD(0x234, mode, mux)       /* U3 */
+#define P9_31B(mode, mux) J721E_IOPAD(0x0D4, mode, mux)       /* AB26 */
+#define P9_33A(mode, mux) J721E_WKUP_IOPAD(0x140, mode, mux)  /* K24 */
+#define P9_33B(mode, mux) J721E_IOPAD(0x0CC, mode, mux)       /* AC28 */
+#define P9_35A(mode, mux) J721E_WKUP_IOPAD(0x148, mode, mux)  /* K29 */
+#define P9_35B(mode, mux) J721E_IOPAD(0x0E0, mode, mux)       /* AH27 */
+#define P9_36A(mode, mux) J721E_WKUP_IOPAD(0x144, mode, mux)  /* K27 */
+#define P9_36B(mode, mux) J721E_IOPAD(0x0E4, mode, mux)       /* AH29 */
+#define P9_37A(mode, mux) J721E_WKUP_IOPAD(0x138, mode, mux)  /* K28 */
+#define P9_37B(mode, mux) J721E_IOPAD(0x0E8, mode, mux)       /* AG28 */
+#define P9_38A(mode, mux) J721E_WKUP_IOPAD(0x13C, mode, mux)  /* L28 */
+#define P9_38B(mode, mux) J721E_IOPAD(0x0EC, mode, mux)       /* AG27 */
+#define P9_39A(mode, mux) J721E_WKUP_IOPAD(0x130, mode, mux)  /* K25 */
+#define P9_39B(mode, mux) J721E_IOPAD(0x0DC, mode, mux)       /* AJ28 */
+#define P9_40A(mode, mux) J721E_WKUP_IOPAD(0x134, mode, mux)  /* K26 */
+#define P9_40B(mode, mux) J721E_IOPAD(0x148, mode, mux)       /* AA26 */
+#define P9_41(mode, mux)  J721E_IOPAD(0x204, mode, mux)       /* AD5 */
+#define P9_42A(mode, mux) J721E_IOPAD(0x1F0, mode, mux)       /* AC2 */
+#define P9_42B(mode, mux) J721E_IOPAD(0x048, mode, mux)       /* AJ21 */
+
+#endif
diff --git a/include/dt-bindings/pinctrl/k3.h b/include/dt-bindings/pinctrl/k3.h
index a5204ab91d3e..b98d78562f56 100644
--- a/include/dt-bindings/pinctrl/k3.h
+++ b/include/dt-bindings/pinctrl/k3.h
@@ -44,4 +44,273 @@
 #define AM62X_IOPAD(pa, val, muxmode)		(((pa) & 0x1fff)) ((val) | (muxmode))
 #define AM62X_MCU_IOPAD(pa, val, muxmode)	(((pa) & 0x1fff)) ((val) | (muxmode))
 
+/* RCN-EE: sysconfig_1.10.0: This file was auto-generated by TI PinMux on 10/20/2021. */
+#define J721E_PIN_EXTINTN		0x0
+#define J721E_PIN_PRG1_PRU0_GPO0	0x4
+#define J721E_PIN_PRG1_PRU0_GPO1	0x8
+#define J721E_PIN_PRG1_PRU0_GPO2	0xC
+#define J721E_PIN_PRG1_PRU0_GPO3	0x10
+#define J721E_PIN_PRG1_PRU0_GPO4	0x14
+#define J721E_PIN_PRG1_PRU0_GPO5	0x18
+#define J721E_PIN_PRG1_PRU0_GPO6	0x1C
+#define J721E_PIN_PRG1_PRU0_GPO7	0x20
+#define J721E_PIN_PRG1_PRU0_GPO8	0x24
+#define J721E_PIN_PRG1_PRU0_GPO9	0x28
+#define J721E_PIN_PRG1_PRU0_GPO10	0x2C
+#define J721E_PIN_PRG1_PRU0_GPO11	0x30
+#define J721E_PIN_PRG1_PRU0_GPO12	0x34
+#define J721E_PIN_PRG1_PRU0_GPO13	0x38
+#define J721E_PIN_PRG1_PRU0_GPO14	0x3C
+#define J721E_PIN_PRG1_PRU0_GPO15	0x40
+#define J721E_PIN_PRG1_PRU0_GPO16	0x44
+#define J721E_PIN_PRG1_PRU0_GPO17	0x4C
+#define J721E_PIN_PRG1_PRU0_GPO18	0x50
+#define J721E_PIN_PRG1_PRU0_GPO19	0x54
+#define J721E_PIN_PRG1_PRU1_GPO0	0x58
+#define J721E_PIN_PRG1_PRU1_GPO1	0x5C
+#define J721E_PIN_PRG1_PRU1_GPO2	0x60
+#define J721E_PIN_PRG1_PRU1_GPO3	0x64
+#define J721E_PIN_PRG1_PRU1_GPO4	0x68
+#define J721E_PIN_PRG1_PRU1_GPO5	0x6C
+#define J721E_PIN_PRG1_PRU1_GPO6	0x70
+#define J721E_PIN_PRG1_PRU1_GPO7	0x74
+#define J721E_PIN_PRG1_PRU1_GPO8	0x78
+#define J721E_PIN_PRG1_PRU1_GPO9	0x7C
+#define J721E_PIN_PRG1_PRU1_GPO10	0x80
+#define J721E_PIN_PRG1_PRU1_GPO11	0x84
+#define J721E_PIN_PRG1_PRU1_GPO12	0x88
+#define J721E_PIN_PRG1_PRU1_GPO13	0x8C
+#define J721E_PIN_PRG1_PRU1_GPO14	0x90
+#define J721E_PIN_PRG1_PRU1_GPO15	0x94
+#define J721E_PIN_PRG1_PRU1_GPO16	0x98
+#define J721E_PIN_PRG1_PRU1_GPO17	0x9C
+#define J721E_PIN_PRG1_PRU1_GPO18	0xA0
+#define J721E_PIN_PRG1_PRU1_GPO19	0xA4
+#define J721E_PIN_PRG1_MDIO0_MDIO	0xA8
+#define J721E_PIN_PRG1_MDIO0_MDC	0xAC
+#define J721E_PIN_PRG0_PRU0_GPO0	0xB0
+#define J721E_PIN_PRG0_PRU0_GPO1	0xB4
+#define J721E_PIN_PRG0_PRU0_GPO2	0xB8
+#define J721E_PIN_PRG0_PRU0_GPO3	0xBC
+#define J721E_PIN_PRG0_PRU0_GPO4	0xC0
+#define J721E_PIN_PRG0_PRU0_GPO5	0xC4
+#define J721E_PIN_PRG0_PRU0_GPO6	0xC8
+#define J721E_PIN_PRG0_PRU0_GPO7	0xCC
+#define J721E_PIN_PRG0_PRU0_GPO8	0xD0
+#define J721E_PIN_PRG0_PRU0_GPO9	0xD4
+#define J721E_PIN_PRG0_PRU0_GPO10	0xD8
+#define J721E_PIN_PRG0_PRU0_GPO11	0xDC
+#define J721E_PIN_PRG0_PRU0_GPO12	0xE0
+#define J721E_PIN_PRG0_PRU0_GPO13	0xE4
+#define J721E_PIN_PRG0_PRU0_GPO14	0xE8
+#define J721E_PIN_PRG0_PRU0_GPO15	0xEC
+#define J721E_PIN_PRG0_PRU0_GPO16	0xF0
+#define J721E_PIN_PRG0_PRU0_GPO17	0xF4
+#define J721E_PIN_PRG0_PRU0_GPO18	0xF8
+#define J721E_PIN_PRG0_PRU0_GPO19	0xFC
+#define J721E_PIN_PRG0_PRU1_GPO0	0x100
+#define J721E_PIN_PRG0_PRU1_GPO1	0x104
+#define J721E_PIN_PRG0_PRU1_GPO2	0x108
+#define J721E_PIN_PRG0_PRU1_GPO3	0x10C
+#define J721E_PIN_PRG0_PRU1_GPO4	0x110
+#define J721E_PIN_PRG0_PRU1_GPO5	0x114
+#define J721E_PIN_PRG0_PRU1_GPO6	0x118
+#define J721E_PIN_PRG0_PRU1_GPO7	0x11C
+#define J721E_PIN_PRG0_PRU1_GPO8	0x120
+#define J721E_PIN_PRG0_PRU1_GPO9	0x124
+#define J721E_PIN_PRG0_PRU1_GPO10	0x128
+#define J721E_PIN_PRG0_PRU1_GPO11	0x12C
+#define J721E_PIN_PRG0_PRU1_GPO12	0x130
+#define J721E_PIN_PRG0_PRU1_GPO13	0x134
+#define J721E_PIN_PRG0_PRU1_GPO14	0x138
+#define J721E_PIN_PRG0_PRU1_GPO15	0x13C
+#define J721E_PIN_PRG0_PRU1_GPO16	0x140
+#define J721E_PIN_PRG0_PRU1_GPO17	0x144
+#define J721E_PIN_PRG0_PRU1_GPO18	0x148
+#define J721E_PIN_PRG0_PRU1_GPO19	0x14C
+#define J721E_PIN_PRG0_MDIO0_MDIO	0x150
+#define J721E_PIN_PRG0_MDIO0_MDC	0x154
+#define J721E_PIN_RGMII5_TX_CTL		0x158
+#define J721E_PIN_RGMII5_RX_CTL		0x15C
+#define J721E_PIN_RGMII5_TD3		0x160
+#define J721E_PIN_RGMII5_TD2		0x164
+#define J721E_PIN_RGMII5_TD1		0x168
+#define J721E_PIN_RGMII5_TD0		0x16C
+#define J721E_PIN_RGMII5_TXC		0x170
+#define J721E_PIN_RGMII5_RXC		0x174
+#define J721E_PIN_RGMII5_RD3		0x178
+#define J721E_PIN_RGMII5_RD2		0x17C
+#define J721E_PIN_RGMII5_RD1		0x180
+#define J721E_PIN_RGMII5_RD0		0x184
+#define J721E_PIN_RGMII6_TX_CTL		0x188
+#define J721E_PIN_RGMII6_RX_CTL		0x18C
+#define J721E_PIN_RGMII6_TD3		0x190
+#define J721E_PIN_RGMII6_TD2		0x194
+#define J721E_PIN_RGMII6_TD1		0x198
+#define J721E_PIN_RGMII6_TD0		0x19C
+#define J721E_PIN_RGMII6_TXC		0x1A0
+#define J721E_PIN_RGMII6_RXC		0x1A4
+#define J721E_PIN_RGMII6_RD3		0x1A8
+#define J721E_PIN_RGMII6_RD2		0x1AC
+#define J721E_PIN_RGMII6_RD1		0x1B0
+#define J721E_PIN_RGMII6_RD0		0x1B4
+#define J721E_PIN_MDIO0_MDIO		0x1B8
+#define J721E_PIN_MDIO0_MDC		0x1BC
+#define J721E_PIN_SPI0_CS0		0x1C0
+#define J721E_PIN_SPI0_CS1		0x1C4
+#define J721E_PIN_SPI0_CLK		0x1C8
+#define J721E_PIN_SPI0_D0		0x1CC
+#define J721E_PIN_SPI0_D1		0x1D0
+#define J721E_PIN_SPI1_CS0		0x1D4
+#define J721E_PIN_SPI1_CS1		0x1D8
+#define J721E_PIN_SPI1_CLK		0x1DC
+#define J721E_PIN_SPI1_D0		0x1E0
+#define J721E_PIN_SPI1_D1		0x1E4
+#define J721E_PIN_UART0_RXD		0x1E8
+#define J721E_PIN_UART0_TXD		0x1EC
+#define J721E_PIN_UART0_CTSN		0x1F0
+#define J721E_PIN_UART0_RTSN		0x1F4
+#define J721E_PIN_UART1_RXD		0x1F8
+#define J721E_PIN_UART1_TXD		0x1FC
+#define J721E_PIN_UART1_CTSN		0x200
+#define J721E_PIN_UART1_RTSN		0x204
+#define J721E_PIN_MCAN0_RX		0x208
+#define J721E_PIN_MCAN0_TX		0x20C
+#define J721E_PIN_MCAN1_RX		0x210
+#define J721E_PIN_MCAN1_TX		0x214
+#define J721E_PIN_I3C0_SCL		0x218
+#define J721E_PIN_I3C0_SDA		0x21C
+#define J721E_PIN_I2C0_SCL		0x220
+#define J721E_PIN_I2C0_SDA		0x224
+#define J721E_PIN_I2C1_SCL		0x228
+#define J721E_PIN_I2C1_SDA		0x22C
+#define J721E_PIN_ECAP0_IN_APWM_OUT	0x230
+#define J721E_PIN_EXT_REFCLK1		0x234
+#define J721E_PIN_TIMER_IO0		0x238
+#define J721E_PIN_TIMER_IO1		0x23C
+#define J721E_PIN_MMC1_DAT3		0x240
+#define J721E_PIN_MMC1_DAT2		0x244
+#define J721E_PIN_MMC1_DAT1		0x248
+#define J721E_PIN_MMC1_DAT0		0x24C
+#define J721E_PIN_MMC1_CLK		0x250
+#define J721E_PIN_MMC1_CMD		0x254
+#define J721E_PIN_MMC1_SDCD		0x258
+#define J721E_PIN_MMC1_SDWP		0x25C
+#define J721E_PIN_MMC2_DAT3		0x260
+#define J721E_PIN_MMC2_DAT2		0x264
+#define J721E_PIN_MMC2_DAT1		0x268
+#define J721E_PIN_MMC2_DAT0		0x26C
+#define J721E_PIN_MMC2_CLK		0x270
+#define J721E_PIN_MMC2_CMD		0x274
+#define J721E_PIN_RESETSTATZ		0x278
+#define J721E_PIN_PORZ_OUT		0x27C
+#define J721E_PIN_SOC_SAFETY_ERRORN	0x280
+#define J721E_PIN_TDI			0x284
+#define J721E_PIN_TDO			0x288
+#define J721E_PIN_TMS			0x28C
+#define J721E_PIN_USB0_DRVVBUS		0x290
+#define J721E_PIN_MLB0_MLBSP		0x294
+#define J721E_PIN_MLB0_MLBSN		0x298
+#define J721E_PIN_MLB0_MLBDP		0x29C
+#define J721E_PIN_MLB0_MLBDN		0x2A0
+#define J721E_PIN_MLB0_MLBCP		0x2A4
+#define J721E_PIN_MLB0_MLBCN		0x2A8
+#define J721E_PIN_MMC1_CLKLB		0x2AC
+#define J721E_PIN_MMC2_CLKLB		0x2B0
+
+#define J721E_PIN_MCU_OSPI0_CLK		0x0
+#define J721E_PIN_MCU_OSPI0_LBCLKO	0x4
+#define J721E_PIN_MCU_OSPI0_DQS		0x8
+#define J721E_PIN_MCU_OSPI0_D0		0xC
+#define J721E_PIN_MCU_OSPI0_D1		0x10
+#define J721E_PIN_MCU_OSPI0_D2		0x14
+#define J721E_PIN_MCU_OSPI0_D3		0x18
+#define J721E_PIN_MCU_OSPI0_D4		0x1C
+#define J721E_PIN_MCU_OSPI0_D5		0x20
+#define J721E_PIN_MCU_OSPI0_D6		0x24
+#define J721E_PIN_MCU_OSPI0_D7		0x28
+#define J721E_PIN_MCU_OSPI0_CSN0	0x2C
+#define J721E_PIN_MCU_OSPI0_CSN1	0x30
+#define J721E_PIN_MCU_OSPI1_CLK		0x34
+#define J721E_PIN_MCU_OSPI1_LBCLKO	0x38
+#define J721E_PIN_MCU_OSPI1_DQS		0x3C
+#define J721E_PIN_MCU_OSPI1_D0		0x40
+#define J721E_PIN_MCU_OSPI1_D1		0x44
+#define J721E_PIN_MCU_OSPI1_D2		0x48
+#define J721E_PIN_MCU_OSPI1_D3		0x4C
+#define J721E_PIN_MCU_OSPI1_CSN0	0x50
+#define J721E_PIN_MCU_OSPI1_CSN1	0x54
+#define J721E_PIN_MCU_RGMII1_TX_CTL	0x58
+#define J721E_PIN_MCU_RGMII1_RX_CTL	0x5C
+#define J721E_PIN_MCU_RGMII1_TD3	0x60
+#define J721E_PIN_MCU_RGMII1_TD2	0x64
+#define J721E_PIN_MCU_RGMII1_TD1	0x68
+#define J721E_PIN_MCU_RGMII1_TD0	0x6C
+#define J721E_PIN_MCU_RGMII1_TXC	0x70
+#define J721E_PIN_MCU_RGMII1_RXC	0x74
+#define J721E_PIN_MCU_RGMII1_RD3	0x78
+#define J721E_PIN_MCU_RGMII1_RD2	0x7C
+#define J721E_PIN_MCU_RGMII1_RD1	0x80
+#define J721E_PIN_MCU_RGMII1_RD0	0x84
+#define J721E_PIN_MCU_MDIO0_MDIO	0x88
+#define J721E_PIN_MCU_MDIO0_MDC		0x8C
+#define J721E_PIN_MCU_SPI0_CLK		0x90
+#define J721E_PIN_MCU_SPI0_D0		0x94
+#define J721E_PIN_MCU_SPI0_D1		0x98
+#define J721E_PIN_MCU_SPI0_CS0		0x9C
+#define J721E_PIN_WKUP_UART0_RXD	0xA0
+#define J721E_PIN_WKUP_UART0_TXD	0xA4
+#define J721E_PIN_MCU_MCAN0_TX		0xA8
+#define J721E_PIN_MCU_MCAN0_RX		0xAC
+#define J721E_PIN_WKUP_GPIO0_0		0xB0
+#define J721E_PIN_WKUP_GPIO0_1		0xB4
+#define J721E_PIN_WKUP_GPIO0_2		0xB8
+#define J721E_PIN_WKUP_GPIO0_3		0xBC
+#define J721E_PIN_WKUP_GPIO0_4		0xC0
+#define J721E_PIN_WKUP_GPIO0_5		0xC4
+#define J721E_PIN_WKUP_GPIO0_6		0xC8
+#define J721E_PIN_WKUP_GPIO0_7		0xCC
+#define J721E_PIN_WKUP_GPIO0_8		0xD0
+#define J721E_PIN_WKUP_GPIO0_9		0xD4
+#define J721E_PIN_WKUP_GPIO0_10		0xD8
+#define J721E_PIN_WKUP_GPIO0_11		0xDC
+#define J721E_PIN_WKUP_GPIO0_12		0xE0
+#define J721E_PIN_WKUP_GPIO0_13		0xE4
+#define J721E_PIN_WKUP_GPIO0_14		0xE8
+#define J721E_PIN_WKUP_GPIO0_15		0xEC
+#define J721E_PIN_MCU_I3C0_SCL		0xF0
+#define J721E_PIN_MCU_I3C0_SDA		0xF4
+#define J721E_PIN_WKUP_I2C0_SCL		0xF8
+#define J721E_PIN_WKUP_I2C0_SDA		0xFC
+#define J721E_PIN_MCU_I2C0_SCL		0x100
+#define J721E_PIN_MCU_I2C0_SDA		0x104
+#define J721E_PIN_PMIC_POWER_EN0	0x108
+#define J721E_PIN_PMIC_POWER_EN1	0x10C
+#define J721E_PIN_MCU_SAFETY_ERRORN	0x110
+#define J721E_PIN_MCU_RESETZ		0x114
+#define J721E_PIN_MCU_RESETSTATZ	0x118
+#define J721E_PIN_MCU_PORZ_OUT		0x11C
+#define J721E_PIN_TCK			0x120
+#define J721E_PIN_TRSTN			0x124
+#define J721E_PIN_EMU0			0x128
+#define J721E_PIN_EMU1			0x12C
+#define J721E_PIN_MCU_ADC0_AIN0		0x130
+#define J721E_PIN_MCU_ADC0_AIN1		0x134
+#define J721E_PIN_MCU_ADC0_AIN2		0x138
+#define J721E_PIN_MCU_ADC0_AIN3		0x13C
+#define J721E_PIN_MCU_ADC0_AIN4		0x140
+#define J721E_PIN_MCU_ADC0_AIN5		0x144
+#define J721E_PIN_MCU_ADC0_AIN6		0x148
+#define J721E_PIN_MCU_ADC0_AIN7		0x14C
+#define J721E_PIN_MCU_ADC1_AIN0		0x150
+#define J721E_PIN_MCU_ADC1_AIN1		0x154
+#define J721E_PIN_MCU_ADC1_AIN2		0x158
+#define J721E_PIN_MCU_ADC1_AIN3		0x15C
+#define J721E_PIN_MCU_ADC1_AIN4		0x160
+#define J721E_PIN_MCU_ADC1_AIN5		0x164
+#define J721E_PIN_MCU_ADC1_AIN6		0x168
+#define J721E_PIN_MCU_ADC1_AIN7		0x16C
+#define J721E_PIN_RESET_REQZ		0x170
+#define J721E_PIN_PORZ			0x174
+
 #endif
-- 
2.30.2

