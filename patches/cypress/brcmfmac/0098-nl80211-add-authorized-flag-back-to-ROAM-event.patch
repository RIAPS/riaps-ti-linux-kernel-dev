From bb844161d7cd26733109c4129f0440ba567f2a26 Mon Sep 17 00:00:00 2001
From: Chung-Hsien Hsu <stanley.hsu@cypress.com>
Date: Thu, 14 Feb 2019 16:33:53 +0800
Subject: [PATCH 098/154] nl80211: add authorized flag back to ROAM event

Commit 503c1fb98ba3 ("cfg80211/nl80211: add a port authorized event")
added the NL80211_CMD_PORT_AUTHORIZED event to indicate that a
connection is authorized. It replaced the PORT_AUTHORIZED attribute and
the authorized flag added in commit f45cbe6e691f
("nl80211: add authorized flag to ROAM event").

However, for offload FT, using PORT_AUTHORIZED event mechanism induces
wpa_supplicant to start a full EAP exchange after a successful roaming.
This patch adds the flag mechanism back to the ROAM event for drivers
to fix the offload FT roaming issue.

Signed-off-by: Chung-Hsien Hsu <stanley.hsu@cypress.com>
---
 include/net/cfg80211.h       | 4 ++++
 include/uapi/linux/nl80211.h | 5 ++++-
 net/wireless/nl80211.c       | 2 ++
 net/wireless/sme.c           | 1 +
 4 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index d5dc5788ec91..1f995205f9d3 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -5735,6 +5735,9 @@ cfg80211_connect_timeout(struct net_device *dev, const u8 *bssid,
  * @req_ie_len: association request IEs length
  * @resp_ie: association response IEs (may be %NULL)
  * @resp_ie_len: assoc response IEs length
+ * @authorized: true if the 802.1X authentication was done by the driver or is
+ *	not needed (e.g., when Fast Transition protocol was used), false
+ *	otherwise. Ignored for networks that don't use 802.1X authentication.
  * @fils: FILS related roaming information.
  */
 struct cfg80211_roam_info {
@@ -5745,6 +5748,7 @@ struct cfg80211_roam_info {
 	size_t req_ie_len;
 	const u8 *resp_ie;
 	size_t resp_ie_len;
+	bool authorized;
 	struct cfg80211_fils_resp_params fils;
 };
 
diff --git a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
index 5d4c8906c9dd..a9047482f65d 100644
--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@ -2222,7 +2222,10 @@ enum nl80211_commands {
  *	in %NL80211_CMD_CONNECT to indicate that for 802.1X authentication it
  *	wants to use the supported offload of the 4-way handshake.
  * @NL80211_ATTR_PMKR0_NAME: PMK-R0 Name for offloaded FT.
- * @NL80211_ATTR_PORT_AUTHORIZED: (reserved)
+ * @NL80211_ATTR_PORT_AUTHORIZED: flag attribute used in %NL80211_CMD_ROAMED
+ *	notification indicating that that 802.1X authentication was done by
+ *	the driver or is not needed (because roaming used the Fast Transition
+ *	protocol).
  *
  * @NL80211_ATTR_EXTERNAL_AUTH_ACTION: Identify the requested external
  *     authentication operation (u32 attribute with an
diff --git a/net/wireless/nl80211.c b/net/wireless/nl80211.c
index 3a1a839b38c4..9612b20f7dd0 100644
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -14537,6 +14537,8 @@ void nl80211_send_roamed(struct cfg80211_registered_device *rdev,
 	    (info->resp_ie &&
 	     nla_put(msg, NL80211_ATTR_RESP_IE, info->resp_ie_len,
 		     info->resp_ie)) ||
+	    (info->authorized &&
+	     nla_put_flag(msg, NL80211_ATTR_PORT_AUTHORIZED)) ||
 	    (info->fils.update_erp_next_seq_num &&
 	     nla_put_u16(msg, NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM,
 			 info->fils.erp_next_seq_num)) ||
diff --git a/net/wireless/sme.c b/net/wireless/sme.c
index 07c2196e9d57..9bc610c88cf7 100644
--- a/net/wireless/sme.c
+++ b/net/wireless/sme.c
@@ -996,6 +996,7 @@ void cfg80211_roamed(struct net_device *dev, struct cfg80211_roam_info *info,
 	if (info->fils.update_erp_next_seq_num)
 		ev->rm.fils.erp_next_seq_num = info->fils.erp_next_seq_num;
 	ev->rm.bss = info->bss;
+	ev->rm.authorized = info->authorized;
 
 	spin_lock_irqsave(&wdev->event_lock, flags);
 	list_add_tail(&ev->list, &wdev->event_list);
-- 
2.24.1

