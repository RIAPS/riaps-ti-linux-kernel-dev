From 817607707d144246c38efa6676943d9d5bc57e92 Mon Sep 17 00:00:00 2001
From: Robert Nelson <robertcnelson@gmail.com>
Date: Fri, 18 Feb 2022 16:39:06 -0600
Subject: [PATCH 11/15] Revert "phy: cadence: Sierra: Rename some regmap
 variables to be in sync with Sierra documentation"

This reverts commit a7dfe7f1699624f69a5b68e68cee925779979519.

Signed-off-by: Robert Nelson <robertcnelson@gmail.com>
---
 drivers/phy/cadence/phy-cadence-sierra.c | 21 ++++++++++-----------
 1 file changed, 10 insertions(+), 11 deletions(-)

diff --git a/drivers/phy/cadence/phy-cadence-sierra.c b/drivers/phy/cadence/phy-cadence-sierra.c
index 9f2b8aefee9c..4674328574f5 100644
--- a/drivers/phy/cadence/phy-cadence-sierra.c
+++ b/drivers/phy/cadence/phy-cadence-sierra.c
@@ -145,9 +145,8 @@
 #define SIERRA_DEQ_TAU_CTRL1_FAST_MAINT_PREG		0x14F
 #define SIERRA_DEQ_TAU_CTRL1_SLOW_MAINT_PREG		0x150
 
-/* PHY PCS common registers */
-#define SIERRA_PHY_PCS_COMMON_OFFSET(block_offset)	\
-				     (0xc000 << (block_offset))
+#define SIERRA_PHY_CONFIG_CTRL_OFFSET(block_offset)	\
+				      (0xc000 << (block_offset))
 #define SIERRA_PHY_PLL_CFG				0xe
 
 #define SIERRA_MACRO_ID					0x00007364
@@ -276,7 +275,7 @@ struct cdns_sierra_phy {
 	struct reset_control *phy_rst;
 	struct reset_control *apb_rst;
 	struct regmap *regmap_lane_cdb[SIERRA_MAX_LANES];
-	struct regmap *regmap_phy_pcs_common_cdb;
+	struct regmap *regmap_phy_config_ctrl;
 	struct regmap *regmap_common_cdb;
 	struct regmap_field *macro_id_type;
 	struct regmap_field *phy_pll_cfg_1;
@@ -347,8 +346,8 @@ static const struct regmap_config cdns_sierra_common_cdb_config = {
 	.reg_read = cdns_regmap_read,
 };
 
-static const struct regmap_config cdns_sierra_phy_pcs_cmn_cdb_config = {
-	.name = "sierra_phy_pcs_cmn_cdb",
+static const struct regmap_config cdns_sierra_phy_config_ctrl_config = {
+	.name = "sierra_phy_config_ctrl",
 	.reg_stride = 1,
 	.fast_io = true,
 	.reg_write = cdns_regmap_write,
@@ -690,7 +689,7 @@ static int cdns_regfield_init(struct cdns_sierra_phy *sp)
 		sp->cmn_refrcv_refclk_termen_preg[i] = field;
 	}
 
-	regmap = sp->regmap_phy_pcs_common_cdb;
+	regmap = sp->regmap_phy_config_ctrl;
 	field = devm_regmap_field_alloc(dev, regmap, phy_pll_cfg_1);
 	if (IS_ERR(field)) {
 		dev_err(dev, "PHY_PLL_CFG_1 reg field init failed\n");
@@ -742,14 +741,14 @@ static int cdns_regmap_init_blocks(struct cdns_sierra_phy *sp,
 	}
 	sp->regmap_common_cdb = regmap;
 
-	block_offset = SIERRA_PHY_PCS_COMMON_OFFSET(block_offset_shift);
+	block_offset = SIERRA_PHY_CONFIG_CTRL_OFFSET(block_offset_shift);
 	regmap = cdns_regmap_init(dev, base, block_offset, reg_offset_shift,
-				  &cdns_sierra_phy_pcs_cmn_cdb_config);
+				  &cdns_sierra_phy_config_ctrl_config);
 	if (IS_ERR(regmap)) {
-		dev_err(dev, "Failed to init PHY PCS common CDB regmap\n");
+		dev_err(dev, "Failed to init PHY config and control regmap\n");
 		return PTR_ERR(regmap);
 	}
-	sp->regmap_phy_pcs_common_cdb = regmap;
+	sp->regmap_phy_config_ctrl = regmap;
 
 	return 0;
 }
-- 
2.30.2

